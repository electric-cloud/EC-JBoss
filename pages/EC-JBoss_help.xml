<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta name="generator" content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />
        <meta content="text/html; charset=us-ascii" http-equiv="content-type" />
        <title>ElectricFlow Plugin for JBoss EAP.</title>
        <link rel="stylesheet" href="../../plugins/@PLUGIN_KEY@/pluginhelp.css" type="text/css" media="screen" />
    </head>
    <body>
        <div class="help">
            <h1>@PLUGIN_KEY@</h1>
            <p>Plugin Version @PLUGIN_VERSION@</p>
            <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />

            <!-- The tool description should answer these kinds of questions: What is the tool itself is
                 used for in the development process? Who would use this tool? What is the general use case or problem
                 that this tool solves? Look at the tool documentation or websites to get the tool descriptions.
                 Look at Wikipedia or other outside websites. If there is a Hudson plugin, read their documentation for
                 ideas, examples, and so on. It is OK to copy them word-for-word only if it is appropriate, such as FOSS.
                 However, do not do this with commercial software. -->

            <p>Revised on May 10, 2018</p>

            <h1>Contents</h1>
            <p>
                <a href="#overview">Overview</a><br />
                <a href="#setupconfig">Setting Up the Plugin Configuration</a><br />
                <a href="#procedures">Plugin Procedures</a><br />
                <ul>
                    <li><a href="#CheckDeployStatus">CheckDeployStatus</a> (Standalone/Domain)</li>
                    <li><a href="#CheckHostControllerStatus">CheckHostControllerStatus</a> (Domain)</li>
                    <li><a href="#CheckServerGroupStatus">CheckServerGroupStatus</a> (Domain)</li>
                    <li><a href="#CheckServerStatus">CheckServerStatus</a> (Standalone/Domain)</li>
                    <li><a href="#CreateDatasource">CreateDatasource</a> (Standalone/Domain)</li>
                    <li><a href="#CreateOrUpdateDataSource">CreateOrUpdateDataSource</a> (Standalone/Domain)</li>
                    <li><a href="#CreateOrUpdateJMSQueue">CreateOrUpdateJMSQueue</a> (Standalone/Domain)</li>
                    <li><a href="#CreateOrUpdateJMSTopic">CreateOrUpdateJMSTopic</a> (Standalone/Domain)</li>
                    <li><a href="#CreateOrUpdateXADataSource">CreateOrUpdateXADataSource</a> (Standalone/Domain)</li>
                    <li><a href="#DeleteDatasource">DeleteDatasource</a> (Standalone/Domain)</li>
                    <li><a href="#DeployApp">DeployApp</a> (Standalone/Domain)</li>
                    <li><a href="#DeployApplication">DeployApplication</a> (Standalone/Domain)</li>
                    <li><a href="#DisableDeploy">DisableDeploy</a> (Standalone/Domain)</li>
                    <li><a href="#EnableDeploy">EnableDeploy</a> (Standalone/Domain)</li>
                    <li><a href="#GetEnvInfo">GetEnvInfo</a> (Standalone/Domain)</li>
                    <li><a href="#RemoveJMSQueue">RemoveJMSQueue</a> (Standalone/Domain)</li>
                    <li><a href="#RemoveJMSTopic">RemoveJMSTopic</a> (Standalone/Domain)</li>
                    <li><a href="#RemoveXADataSource">RemoveXADataSource</a> (Standalone/Domain)</li>
                    <li><a href="#RunCustomCommand">RunCustomCommand</a> (Standalone/Domain)</li>
                    <li><a href="#ShutdownStandaloneServer">ShutdownStandaloneServer</a> (Standalone)</li>
                    <li><a href="#StartDomainServer">StartDomainServer</a> (Domain)</li>
                    <li><a href="#StartHostController">StartHostController</a> (Domain)</li>
                    <li><a href="#StartServers">StartServers</a> (Domain)</li>
                    <li><a href="#StartStandaloneServer">StartStandaloneServer</a> (Standalone)</li>
                    <li><a href="#StopDomain">StopDomain</a> (Domain)</li>
                    <li><a href="#StopServers">StopServers</a> (Domain)</li>
                    <li><a href="#UndeployApp">UndeployApp</a> (Standalone/Domain)</li>
                </ul>
                <a href="#known-issues">Known Issues</a><br />
                <a href="#rns">Release Notes</a>
            </p>
            <h1 id="overview">Overview</h1>
            <p>
                JBoss is a cross-platform Application Server that implements the JEE
                specification. Based on the way it has evolved over the years, it is
                also referred to as Wildfly (the current name for JBoss AS) or JBoss EAP
                (owned by Red Hat). Wildfly is the open source community edition and
                JBoss EAP the commercial edition.
            </p>
            <p>
                The following link provides the Red Hat documentation for JBoss EAP:
                <a href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/" title="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/">JBoss EAP</a>
            </p>
            <h2>ElectricFlow Integration with JBoss</h2>
            <p>
                Use the EC-JBoss plugin to interact with JBoss EAP to perform tasks such as managing servers and deployments.
            </p>

            <h2>Supported Versions</h2>
            <p>
                This plugin was developed and tested with following JBoss versions:
                <ul>
                    <li>JBoss EAP 6.0 on Linux and Windows</li>
                    <li>JBoss EAP 6.1 on Linux and Windows</li>
                    <li>JBoss EAP 6.2 on Linux and Windows</li>
                    <li>JBoss EAP 6.4 on Linux and Windows</li>
                    <li>JBoss EAP 7.0 on Linux and Windows</li>
                    <li>JBoss EAP 7.1 on Linux and Windows</li>
                </ul>
            </p>
            <p>
                <b>Important</b>: For all parameter descriptions in the following sections, the required parameters are in <span class='required'>bold italics</span>.
            </p>

            <div>
                <a id="CreateConfiguration"></a>
                <h1 id="setupconfig">Setting Up the Plugin Configuration</h1>

                <!-- If the plugin has separate configuration procedures, include this section; If not, omit
                     this whole section. We do not need a configuration section that just says "There is no
                     configuration for this plugin." -->

                <p>
                    Plugin configurations are sets of parameters that apply across some or all of the plugin procedures.
                    They reduce repetition of common values, create predefined sets of parameters for end users, and
                    store credentials securely. Each configuration has a unique name that is automatically entered in
                    designated parameters in the procedures.
                </p>
                <h2>Input</h2>
                <ol>
                    <li>Go to <b>Administration</b> > <b>Plugins</b> to open the Plugin Manager.</li>
                    <li>Find the @PLUGIN_KEY@ row.</li>
                    <li>Click <b>Configure</b> to open the JBoss Configurations page.</li>
                    <li>Click <b>Create Configuration</b>.</li>
                    <li>To enable ElectricFlow to communicate with your JBoss AS, enter the following information. You may need to create additional
                        configurations later, especially when using standalone and domain servers, because they use different port numbers.<br /> </li>

                    <!-- For all parameters, the parameter name should be exactly the same as it appears in the Parameter Panel,
                         and the first sentences of the description should be the same as the tooltip (if there is one). After that,
                         the parameter description can go into more detail about the parameter including valid value ranges and examples. -->
                    <table class="grid">
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class='required'>Configuration name</td>
                                <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                            </tr>
                            <tr>
                                <td class='required'>JBoss controller location</td>
                                <td>
                                    JBoss controller location. For example: localhost:9999. You can find this information in "$JBOSS_HOME/bin/jboss-cli.xml". If secured connection is being used, see Known Issues section in the documentation.
                                </td>
                            </tr>
                            <tr>
                                <td>Physical location of the jboss client script</td>
                                <td>Provide the physical location of the jboss Command Line Interface script, i.e: <i>jboss-cli.bat</i>, <i>/path/to/jboss-cli.sh</i></td>
                            </tr>
                            <tr>
                                <td>Login as</td>
                                <td><i>Username</i>: The user name that ElectricFlow uses to communicate with the JBoss server.<br />
                                    <i>Password</i>: Provide the password for the <i>Username</i>.<br />
                                    <i>Retype Password</i>: Re-enter the password.
                                </td>
                            </tr>
                            <tr>
                                <td>Additional Java options</td>
                                <td>Additional java options. This line will be added to the value of JAVA_OPTS environment variable.</td>
                            </tr>
                        </tbody>
                    </table>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/Config/ECJBossConfig.png" />
                    <br />
                </ol>
                <h2>Output</h2>
                <p>The JBoss Configurations page now shows the new configuration.</p>
            </div>
            <h1 id="procedures">Plugin Procedures</h1>

            <div id="CheckDeployStatus">
                <h2>CheckDeployStatus</h2>
                <p>This procedure checks the status of a deployed application using jboss client script.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CheckDeployStatus procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Deployment Name</td>
                                    <td>Unique name of the deployment.</td>
                                </tr>

                                <tr>
                                    <td>Hosts</td>
                                    <td>Provide the comma-separated list of host names.</td>
                                </tr>
                                <tr>
                                    <td>Server groups</td>
                                    <td>Provide the comma-separated list of server group names. If "Hosts" parameter has been provided, procedure will search for server groups within that hosts list.</td>
                                </tr>
                                <tr>
                                    <td>Servers</td>
                                    <td>Provide the comma-separated list of server names. If "Server groups" parameter has been provided, procedure will search for servers within that group.</td>
                                </tr>
                                <tr>
                                    <td class="required">Success criteria</td>
                                    <td>A desired terminal status of the deployment. The procedure will fail if criteria will not be reached.</td>
                                </tr>
                                <tr>
                                    <td>Wait time</td>
                                    <td>Wait time for terminal status in seconds. If not provided, only one check will be performed. If 0, it will wait until criteria is met. Default 300.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckDeployStatus/ECJBossCheckDeployStatus2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>
                    After the job runs, you can view the results on the Job Details page in ElectricFlow. In the <b>CheckDeployStatus</b> step, click the Log icon to see the diagnostic information and status of the deployment:

                </p>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckDeployStatus/ECJBossCheckDeployStatus3.png" />
                    <br />
                <p>
                    In the <b>CheckDeployStatus</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckDeployStatus/ECJBossCheckDeployStatus4.png" />
                <br />


            </div>
            <div id="CheckHostControllerStatus"> <a name="CheckHostControllerStatus" id="CheckHostControllerStatus"></a>
                <h2>CheckHostControllerStatus</h2>
                <p>The CheckHostControllerStatus procedure checks status of JBoss' Host Controller.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CheckHostControllerStatus procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Host controller name</td>
                                    <td>Host controller name. Default is 'master'.</td>
                                </tr>
                                <tr>
                                    <td>Wait time</td>
                                    <td>Wait time for terminal state in seconds. If not provided, only one check will be performed. If 0, it will wait until criteria is met. Default 300.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Success criteria</td>
                                    <td>A desired terminal status of the host controller. The procedure will fail if criteria will not be reached.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckHostControllerStatus/CheckHostControllerStatus2.png" />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that host controller is running.</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckHostControllerStatus/CheckHostControllerStatus3.png" />
                <br />
                <p>In the <b>CheckHostControllerStatus</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckHostControllerStatus/CheckHostControllerStatus4.png" />
                <br />
            </div>
            <div id="CheckServerGroupStatus"> <a name='CheckServerGroupStatus' id="CheckServerGroupStatus"></a>
                <h2>CheckServerGroupStatus (Domain)</h2>
                The CheckServerGroupStatus procedure checks if the Status of all servers in the Server Group is equal to the Status mentioned in the Criteria field.
                The procedure will have status success if criteria is met.
                For Electric Flow 8.3 and later: the procedure returns 'TRUE' or 'FALSE' based on the check, the result is captured in the Output Parameter, called "servergroupstatus".
                <br/><br/>
                There are the following criterias supported by the procedure:
                <ol>
                    <li>
                        STARTED
                    </li>
                    <li>
                        STOPPED
                    </li>
                    <li>
                        DISABLED
                    </li>
                    <li>
                        STOPPED or DISABLED
                    </li>
                </ol>
                Retrieving of server statuses is performed via JBoss CLI by checking the 'status' attribute
                under the following context /host=[host_name]/server-config=[server_name] for needed servers within server group.
                <br/><br/>
                List of all possible values of cli server statuses is the following (according to some WildFly open source code):
                <ol>
                    <li>STARTED - The server is started</li>
                    <li>STOPPED - The server is stopped and configured to start automatically</li>
                    <li>DISABLED - The server is stopped and configured not to start automatically</li>
                    <li>STARTING - The server is starting</li>
                    <li>STOPPING - The server is stopping</li>
                    <li>FAILED - The server failed to start</li>
                    <li>UNKNOWN - The status of the server is currently unknown. This is the status of any server whose host controller is currently unreachable</li>
                    <li>DOES_NOT_EXIST - Status indicating the host controller does not recognize the server name</li>
                </ol>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CheckServerGroupStatus procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration Name</td>
                                    <td>
                                        Required parameter.
                                        <br/>
                                        A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Physical Location of the JBoss Client Script</td>
                                    <td>
                                        Optional parameter.
                                        <br />
                                        Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.
                                    </td>
                                </tr>
                                <tr>
                                    <td class='required'>Server Group Name</td>
                                    <td>
                                        Required parameter.
                                        <br/>
                                        The name of server group to be checked.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Wait Time</td>
                                    <td>
                                        Optional parameter.
                                        <br />
                                        Maximum duration (in seconds) of server group status check retries.
                                        If not provided, only one check will be performed.
                                        If 0, it will wait until criteria is met.
                                        Default 300.
                                    </td>
                                </tr>
                                <tr>
                                    <td class='required'>Criteria</td>
                                    <td>
                                        Required parameter.
                                        <br/>
                                        A desired status for all servers in the group. Possible options:
                                        <ol>
                                            <li>
                                                STARTED
                                            </li>
                                            <li>
                                                STOPPED
                                            </li>
                                            <li>
                                                DISABLED
                                            </li>
                                            <li>
                                                STOPPED or DISABLED
                                            </li>
                                        </ol>
                                        The procedure will have status success if criteria is met.
                                        For Electric Flow 8.3 and later: the procedure returns 'TRUE' or 'FALSE' based on the check, the result is captured in the Output Parameter, called "servergroupstatus".
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerGroupStatus/CheckServerGroupForm1.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>CheckServerGroupStatus</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerGroupStatus/CheckServerGroupStatusRunScenarios.PNG" />
            </div>
            <div id="CheckServerStatus">
                <h2>CheckServerStatus</h2>
                <p>The CheckServerStatus procedure checks the status of the specified server.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CheckServerStatus procedure.</li>
                    <li>Enter the following parameters: <br />
                    <table class="grid">
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class='required'>Configuration name</td>
                                <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                            </tr>
                            <tr>
                                <td>Physical location of the jboss client script</td>
                                <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                            </tr>
                        </tbody>
                    </table>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerStatus/ECJBossCheckServerStatus2.png" />
                    <br />
                    </li>
                </ol>
                <h3>Output</h3>
                <p>
                    After the job runs, you can view the results on the Job Details page in ElectricFlow. In the <b>CheckServerStatus</b> step,
                    click the Log icon to see the diagnostic information.
                </p>
                <!--
                    <p>After the job runs, you can view the results, including the following job details, which show
                        that the job was completed:</p>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerStatus/ECJBossShutdownStandalone3.png" />
                    <br />
                <p>In the <b>CheckServerStatus</b> step, click the Log icon to see the diagnostic information. The output is similar
                    to the following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerStatus/ECJBossShutdownStandalone4.png" />
                <br />
                -->
            </div>

            <div id="CreateDatasource">
                <a name='CreateDatasource' id="CreateDatasource"></a>
                <h2>CreateDatasource</h2>
                <p>This procedure creates a datasource in JBoss.</p>
                <h3>Input</h3>

                <ol>
                    <li>Go to the CreateDatasource procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Application Name</td>
                                    <td>The name of the application to deploy.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Connection driver URL</td>
                                    <td>The URL for the JDBC driver connection, such as <i>jdbc:mysql://localhost:3306/ectest</i>.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Driver class</td>
                                    <td>The fully qualifed name of the JDBC driver class, such as <i>com.mysql.jdbc.Driver</i>.</td>
                                </tr>
                                <tr>
                                    <td class='required'>JNDI name</td>
                                    <td>The JNDI name for the datasource that should start with java:/ or java:jboss/, such as <i>java:jboss/datasources/MySql</i>.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Driver name</td>
                                    <td>The JDBC driver used by the datasource that can be the name of the .jar file or of the module, such as <i>mysql-connector-java-5.1.20-bin.jar</i>,
                                        depending on how the driver has been deployed.</td>
                                </tr>
                                <tr>
                                    <td>Profile name</td>
                                    <td>The name of the profile used in domain mode.</td>
                                </tr>
                                <tr>
                                    <td>Datasource credential</td>
                                    <td>Credential that contains username and password for data source (need to be attached to step).</td>
                                </tr>
                                <tr>
                                    <td>Enable datasource?</td>
                                    <td>Select this parameter to enable the datasource after it is created.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CreateDatasource/ECJBossCreateDatasource2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>
                    After the job runs, you can view the results on the Job Details page in ElectricFlow. In the <b>CreateDatasource</b> step,
                    click the Log icon to see the diagnostic information.
                </p>
                <!--
                    <p>After the job runs, you can view the results, including the following job details, which show that the datasource was
                        created succesfully:</p>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CreateDatasource/ECJBossCreateDatasource3.png" />
                    <br />
                <p>In the <b>CreateDatasource</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CreateDatasource/ECJBossCreateDatasource4.png" />
                <br />
                -->
            </div>
            <div id="CreateOrUpdateDataSource"> <a name="CreateOrUpdateDataSource" id="CreateOrUpdateDataSource"></a>
                <h2>CreateOrUpdateDataSource</h2>
                This procedure can be used to either create a new data source or update certain properties (listed below) of an existing data source.
                <br/><br/>
                The procedure automatically figures out the context (i.e., Create or Update) based on a comparison between certain properties (aka Unique identifiers) in the Input and what exists in the System. The Unique Identifiers per operating mode are as follows:
                <ul>
                    <li>For Standalone, if the 'Data Source Name' in the Input exists in the System, it will result in an update.</li>
                    <li>For Domain if the combination of both 'Data Source Name' and 'Profile' exists in the System, it will result in an update.</li>
                </ul>
                These are the updatable properties for an Update Scenario:
                <ul>
                    <li>JNDI name</li>
                    <li>Credentials: username/password</li>
                </ul>
                The expected behavior of this procedure is described below
                <ul>
                    <li>
                        If data source does not exist (based on Unique Identifier comparison mentioned above) it will be created.
                        <br/>
                        The following example shows how the procedure invokes the creation of data source:
                        <br/>
                        data-source --profile=full add --name=someDataSourceName --jndi-name=java:/test --driver-name=mysql --user-name=someUserName --password=somePassword --connection-url=jdbc:mysql://localhost:3306/mysqldb
                    </li>
                    <li>
                        If data source exists (based on Unique Identifier comparison mentioned above) an update happens. The update makes sure that only when the Input value is different from the System value, the property is updated, else it is skipped.
                        <br/>
                        The following examples shows how the procedure invokes the updation of a data source
                        <br/>
                        /profile=full/subsystem=datasources/data-source=someDataSourceName/:write-attribute(name=jndi-name,value=java:/newTest)
                    </li>

                </ul>
                NOTE: JBoss servers may require restart or reload after a data source is created or updated.
                The JBoss Response would be parsed and reported as part of the step summary.
                Where a reload or restart is required and status of the step will be a Warning.
                The procedure will not perform the reload or restart.
                <h3>Input</h3>
                <ol>
                    <li>Go to the CreateOrUpdateDataSource procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Data Source Name</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        Name of the Data Source. This will also serve as the unique identifier for this resource. For example MySqlDS
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">JNDI Name</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        JNDI Name of the Data Source. For example java:/MySqlDS
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">JDBC Driver Name</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        Defines the JDBC driver the data source should use. It is a symbolic name matching the name of installed driver. For example mysql
                                    </td>
                                </tr>
                                <tr>
                                    <td>Connection URL</td>
                                    <td>
                                        Required for JBoss EAP 6.X, 7.0. Not Required for 7.1.
                                        <br />
                                        The JDBC driver connection URL. For example jdbc:mysql://localhost:3306/mysqldb
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">Data Source Connection Credentials</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        Credential that contains username and password used for the connection (need to be attached to step).
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">Enabled</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        If the created Data Source should be enabled or not. Default is true.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Profile (Domain only)</td>
                                    <td>
                                        Required for Domain, will be ignored for Standalone.
                                        <br/>
                                        Name of the Server Profile to which this Data Source applies to.
                                        <br/>
                                        For example: 'full', 'full-ha'
                                    </td>
                                </tr>
                                <tr>
                                    <td>Additional Options</td>
                                    <td>
                                        Optional parameter.
                                        <br />
                                        'Additional options' to be passed on to jboss-cli. The parameters mentioned in this string will be concatenated to already generated command line for creating data source. For example:
                                        <br/>
                                        --min-pool-size=5 --max-pool-size=10 --check-valid-connection-sql="select 1 from dual"
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateDataSource/CreateOrUpdateDataSourceForm1.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>CreateOrUpdateDataSource</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateDataSource/CreateOrUpdateDataSourceRunScenarios.PNG" />
            </div>
            <div id="CreateOrUpdateJMSQueue"> <a name="CreateOrUpdateJMSQueue" id="CreateOrUpdateJMSQueue"></a>
                <h2>CreateOrUpdateJMSQueue</h2>
                This procedure creates a new jms queue or updates JNDI names for an
                existing jms queue using the default message provider as specified in
                the configuration of the JBoss EAP messaging subsystem. <br />
                <br />
                JBoss EAP supports the following message brokers:
                <ol>
                    <li>HornetQ message broker in EAP 6.0+</li>
                    <li>ActiveMQ Artemis message broker in EAP 7.0+</li>
                </ol>
                Unique identifier for a JMS queue per operating mode are as follows: <br />
                <ol>
                    <li>For Standalone : 'Queue Name'</li>
                    <li>For Domain : 'Queue Name' and 'Profile'</li>
                </ol>
                The expected behavior of this procedure is described below
                <br />
                <ol>
                    <li> If queue does not exist (based on unique identifier) it will be
                        created with specified Queue Name and the list of JNDI names. In
                        case of Domain it will be created based on the specified Profile.
                        Optionally a Queue can be specified to be Durable (default is not
                        durable) and with a Message Selector. The following example shows
                        how the procedure invokes the creation of queue:<br />
                        'jms-queue --profile=full add --queue-address=newQueueName
                        --entries=java:jboss/exported/jms/queue/test,java:jboss/exported/jms/queue/test2
                        --durable=false' </li>
                    <li> If queue exists (based on unique identifier) and the specified
                        list of JNDI names differ from existing list of JNDI name for the
                        queue, they will get updated. <br />
                        NOTE: For JBoss EAP versions 6.2 and 6.3 updating an existing JNDI is not supported. <br />
                        NOTE: Parameters pertaining to Durability, Message Selection and
                        Additional Options will be ignored. <br />
                        NOTE: JBoss servers may require restart (in case of EAP 6) or reload
                        (in case of EAP 7) after a queue is updated with a new jndi name.
                        The procedure would parse the JBoss Response and report as part of
                        the step summary if a reload or a restart is required and where
                        these are required will have report the status as a Warning. The
                        procedure will not perform the reload or restart. The following
                        examples shows how the procedure invokes the updation of a queue in
                        the case of EAP 7.0 and EAP 6.0 respectively:<br />
                        '/profile=full/subsystem=messaging-activemq/server=default/jms-queue=myQueue/:write-attribute(name=entries,value=[java:jboss/exported/jms/queue/test,java:jboss/exported/jms/queue/test2])'
                        <br />
                        '/profile=full/subsystem=messaging/hornetq-server=default/jms-queue=myQueue/:write-attribute(name=entries,value=[java:jboss/exported/jms/queue/test,java:jboss/exported/jms/queue/test2])'
                    </li>
                    <li> If queue exists (based on unique identifier) and specified list
                        of JNDI names is the same as what exists already, it will be a NO-OP
                        for the procedure. It would update nothing in this case.<br />
                        NOTE: Parameters pertaining to Durability, Message Selection and
                        Additional Options will be ignored. </li>
                </ol>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CreateOrUpdateJMSQueue procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Queue Name</td>
                                    <td> Required parameter. <br />
                                        Name of the Queue. </td>
                                </tr>
                                <tr>
                                    <td class="required">JNDI Names</td>
                                    <td> Required parameter. <br />
                                        Format: comma separated JNDI names (do not use whitespaces).
                                        <br />
                                        The list of JNDI names the queue will be bound to. <br />
                                        For example:
                                        'java:jboss/exported/jms/queue/test,java:jboss/exported/jms/queue/test2'
                                    </td>
                                </tr>
                                <tr>
                                    <td>Profile (Domain only)</td>
                                    <td> Required for Domain, will be ignored for Standalone <br />
                                        Name of profile in Domain where queue should be created or
                                        updated (in case of need). <br />
                                        For example: 'full', 'full-ha' </td>
                                </tr>
                                <tr>
                                    <td>Durable</td>
                                    <td>Optional parameter.<br />
                                        Whether the queue to be created is durable or not. Default
                                        is false (unchecked) - non durable.<br />
                                        NOTE: This parameter will be considered only when creating
                                        queues and will be ignored for updates.</td>
                                </tr>
                                <tr>
                                    <td>Message Selector</td>
                                    <td>Optional parameter.<br />
                                        JMS message selector. Only messages that match the selector
                                        will be added to the queue. For example: color='red'<br />
                                        NOTE: This parameter will be considered only when creating
                                        queues and will be ignored for updates.</td>
                                </tr>
                                <tr>
                                    <td>Additional Options</td>
                                    <td>Optional parameter. <br />
                                        'Additional options' to be passed on to jboss-cli. The
                                        parameters mentioned in this string will be concatenated to
                                        already generated command line for creating queue. The
                                        following is an example:<br />
                                        If Additional options is populated as follows<br />
                                        '--legacy-entries=java:jboss/exported/jms/queue/legacy1,java:jboss/exported/jms/queue/legacy2'
                                        <br />the procedure invoke the following command for the
                                        creation of a queue whose name is myQueue:<br />
                                        'jms-queue add --queue-address=myQueue
                                        --entries=java:jboss/exported/jms/queue/test --durable=false
                                        --legacy-entries=java:jboss/exported/jms/queue/legacy1,java:jboss/exported/jms/queue/legacy2'<br />
                                        NOTE: This parameter will be considered only when creating
                                        queues and will be ignored for updates.</td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateJMSQueue/CreateOrUpdateJMSQueueForm1.PNG" />
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateJMSQueue/CreateOrUpdateJMSQueueForm2.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>CreateOrUpdateJMSQueue</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateJMSQueue/CreateOrUpdateJMSQueueRunScenarios.PNG" />
            </div>
            <div id="CreateOrUpdateJMSTopic"> <a name="CreateOrUpdateJMSTopic" id="CreateOrUpdateJMSTopic"></a>
                <h2>CreateOrUpdateJMSTopic</h2>
                This procedure creates a new jms topic or updates JNDI names for an
                existing jms topic using the default message provider as specified in
                the configuration of the JBoss EAP messaging subsystem. <br />
                <br />
                JBoss EAP supports the following message brokers:
                <ol>
                    <li>HornetQ message broker in EAP 6.0+</li>
                    <li>ActiveMQ Artemis message broker in EAP 7.0+</li>
                </ol>
                Unique identifier for a JMS topic per operating mode are as follows: <br />
                <ol>
                    <li>For Standalone : 'Topic Name'</li>
                    <li>For Domain : 'Topic Name' and 'Profile'</li>
                </ol>
                The expected behavior of this procedure is described below
                <br />
                <ol>
                    <li> If topic does not exist (based on unique identifier) it will be
                        created with specified Topic Name and the list of JNDI names. In
                        case of Domain it will be created based on the specified Profile.
                        The following example shows
                        how the procedure invokes the creation of topic:<br />
                        'jms-topic --profile=full add --topic-address=newTopicName
                        --entries=java:jboss/exported/jms/topic/test,java:jboss/exported/jms/topic/test2' </li>
                    <li> If topic exists (based on unique identifier) and the specified
                        list of JNDI names differ from existing list of JNDI name for the
                        topic, they will get updated. <br />
                        NOTE: Additional Options will be ignored. <br />
                        NOTE: JBoss servers may require restart (in case of EAP 6) or reload
                        (in case of EAP 7) after a topic is updated with a new jndi name.
                        The procedure would parse the JBoss Response and report as part of
                        the step summary if a reload or a restart is required and where
                        these are required will have report the status as a Warning. The
                        procedure will not perform the reload or restart. The following
                        examples shows how the procedure invokes the updation of a topic in
                        the case of EAP 7.0 and EAP 6.0 respectively:<br />
                        '/profile=full/subsystem=messaging-activemq/server=default/jms-topic=myTopic/:write-attribute(name=entries,value=[java:jboss/exported/jms/topic/test,java:jboss/exported/jms/topic/test2])'
                        <br />
                        '/profile=full/subsystem=messaging/hornetq-server=default/jms-topic=myTopic/:write-attribute(name=entries,value=[java:jboss/exported/jms/topic/test,java:jboss/exported/jms/topic/test2])'
                    </li>
                    <li> If topic exists (based on unique identifier) and specified list
                        of JNDI names is the same as what exists already, it will be a NO-OP
                        for the procedure. It would update nothing in this case.<br />
                        NOTE: Additional Options will be ignored. </li>
                </ol>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CreateOrUpdateJMSTopic procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Topic Name</td>
                                    <td> Required parameter. <br />
                                        Name of the Topic. </td>
                                </tr>
                                <tr>
                                    <td class="required">JNDI Names</td>
                                    <td> Required parameter. <br />
                                        Format: comma separated JNDI names (do not use whitespaces).
                                        <br />
                                        The list of JNDI names the topic will be bound to. <br />
                                        For example:
                                        'java:jboss/exported/jms/topic/test,java:jboss/exported/jms/topic/test2'
                                    </td>
                                </tr>
                                <tr>
                                    <td>Profile (Domain only)</td>
                                    <td> Required for Domain, will be ignored for Standalone <br />
                                        Name of profile in Domain where topic should be created or
                                        updated (in case of need). <br />
                                        For example: 'full', 'full-ha' </td>
                                </tr>
                                <tr>
                                    <td>Additional Options</td>
                                    <td>Optional parameter. <br />
                                        'Additional options' to be passed on to jboss-cli. The
                                        parameters mentioned in this string will be concatenated to
                                        already generated command line for creating topic. The
                                        following is an example:<br />
                                        If Additional options is populated as follows<br />
                                        '--legacy-entries=java:jboss/exported/jms/topic/legacy1,java:jboss/exported/jms/topic/legacy2'
                                        <br />the procedure invoke the following command for the
                                        creation of a topic whose name is myTopic:<br />
                                        'jms-topic add --topic-address=myTopic
                                        --entries=java:jboss/exported/jms/topic/test
                                        --legacy-entries=java:jboss/exported/jms/topic/legacy1,java:jboss/exported/jms/topic/legacy2'<br />
                                        NOTE: This parameter will be considered only when creating
                                        topics and will be ignored for updates.</td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateJMSTopic/CreateOrUpdateJMSTopicForm1.PNG" />
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateJMSTopic/CreateOrUpdateJMSTopicForm2.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>CreateOrUpdateJMSTopic</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateJMSTopic/CreateOrUpdateJMSTopicRunScenarios.PNG" />
            </div>
            <div id="CreateOrUpdateXADataSource"> <a name="CreateOrUpdateXADataSource" id="CreateOrUpdateXADataSource"></a>
                <h2>CreateOrUpdateXADataSource</h2>
                This procedure can be used to either create a new XA data source or update certain properties (listed below) of an existing XA data source.
                <br/><br/>
                The procedure automatically figures out the context (i.e., Create or Update) based on a comparison between certain properties (aka Unique identifiers) in the Input and what exists in the System. The Unique Identifiers per operating mode are as follows:
                <ul>
                    <li>For Standalone, if the 'Data Source Name' in the Input exists in the System, it will result in an update.</li>
                    <li>For Domain if the combination of both 'Data Source Name' and 'Profile' exists in the System, it will result in an update.</li>
                </ul>
                These are the updatable properties for an Update Scenario:
                <ul>
                    <li>JNDI name</li>
                    <li>Credentials: username/password</li>
                </ul>
                The expected behavior of this procedure is described below
                <ul>
                    <li>
                        If XA data source does not exist (based on Unique Identifier comparison mentioned above) it will be created.
                        <br/>
                        The following example shows how the procedure invokes the creation of xa data source:
                        <br/>
                        xa-data-source --profile=full add --name=someDataSourceName --jndi-name=java:/test --driver-name=mysql --user-name=someUserName --password=somePassword --xa-datasource-properties={"ServerName"=>"localhost","DatabaseName"=>"test","PortNumber"=>"3306","DriverType"=>"4"}
                    </li>
                    <li>
                        If XA data source exists (based on Unique Identifier comparison mentioned above) an update happens. The update makes sure that only when the Input value is different from the System value, the property is updated, else it is skipped.
                        <br/>
                        The following examples shows how the procedure invokes the updation of a xa data source
                        <br/>
                        /profile=full/subsystem=datasources/xa-data-source=someDataSourceName/:write-attribute(name=jndi-name,value=newTest)
                    </li>

                </ul>
                NOTE: JBoss servers may require restart or reload after a XA data source is created or updated.
                The JBoss Response woule be parsed and reported as part of the step summary. Where a reload or restart is required
                and status of the step will be a Warning.
                The procedure will not perform the reload or restart.
                <h3>Input</h3>
                <ol>
                    <li>Go to the CreateOrUpdateXADataSource procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Data Source Name</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        Name of the Data Source. This will also serve as the unique identifier for this resource. For example MysqlXADS
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">JNDI Name</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        JNDI Name of the Data Source. For example java:/MysqlXADS
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">JDBC Driver Name</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        Defines the JDBC driver the data source should use. It is a symbolic name matching
                                        the name of installed driver. For example mysql.
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">XA Data Source Properties</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        A comma-separated list of XA data source properties in "key"=>"value" pair format.
                                        Note that the key value pairs are database dependent and at a minimum should contain the database connection information.
                                        For example
                                        <br />
                                        "URL"=>"jdbc:oracle:oci8:@tc" for an Oracle database
                                        <br />
                                        "ServerName"=>"localhost","DatabaseName"=>"test","PortNumber"=>"3306","DriverType"=>"4" for a Mysql database
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">Data Source Connection Credentials</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        Credential that contains username and password used for the connection (need to be attached to step).
                                    </td>
                                </tr>
                                <tr>
                                    <td class="required">Enabled</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        If the created XA Data Source should be enabled or not. Default is true.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Profile (Domain only)</td>
                                    <td>
                                        Required for Domain, will be ignored for Standalone.
                                        <br/>
                                        Name of the Server Profile to which this XA Data Source applies to.
                                        <br/>
                                        For example: 'full', 'full-ha'
                                    </td>
                                </tr>
                                <tr>
                                    <td>Additional Options</td>
                                    <td>
                                        Optional parameter.
                                        <br />
                                        'Additional options' to be passed on to jboss-cli.
                                        The parameters mentioned in this string will be concatenated to already generated command line for creating xa data source.
                                        For example:
                                        <br/>
                                        --min-pool-size=5 --max-pool-size=10 --check-valid-connection-sql="select 1 from dual"
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateXADataSource/CreateOrUpdateXADataSourceForm1.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>CreateOrUpdateXADataSource</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CreateOrUpdateXADataSource/CreateOrUpdateXADataSourceRunScenarios.PNG" />
            </div>
            <div id="DeleteDatasource"> <a name='DeleteDatasource' id="DeleteDatasource"></a>
                <h2>DeleteDatasource</h2>
                <p>This procedure deletes a datasource in JBoss.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the DeleteDatasource procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Application Name</td>
                                    <td>The name of the application to deploy.</td>
                                </tr>
                                <tr>
                                    <td>Profile Name</td>
                                    <td>The name of the profile used in domain mode.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>

                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeleteDatasource/ECJBossDeleteDatasource2.png" />
                    <br />
                </ol>

                <h3>Output</h3>
                <p>
                    After the job runs, you can view the results on the Job Details page in ElectricFlow. In the <b>DeleteDatasource</b> step,
                    click the Log icon to see the diagnostic information.
                </p>
                <!--
                    <p>After the job runs, you can view the results, including the following job details, which show that the datasource
                        was deleted succesfully:</p>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeleteDatasource/ECJBossDeleteDatasource3.png" />
                    <br />
                <p>In the <b>DeleteDatasource</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeleteDatasource/ECJBossDeleteDatasource4.png" />
                <br />
                -->
            </div>
            <div id="DeployApp"> <a name='DeployApp' id="DeployApp"></a>
                <h2>DeployApp (Standalone/Domain)</h2>
				The DeployApp procedure deploys an application (mainly WAR or EAR) from the specified source (usually from filepath) to standalone server (for Standalone JBoss) or to content repository and specified server groups (for Domain JBoss) based on provided parameters.
				<br/><br/>
				This procedure is build around jboss-cli command 'deploy' and most parameters are corresponding.
				<br/><br/>
				For Standalone server: if the application was already deployed to the server and has to be replaced then deploy should be performed with force flag.
				Or it is possible to undeploy the application (see <a href="#UndeployApp">UndeployApp</a> procedure) before deploying a new version (then force flag is not required).
				<br/><br/>
				For Domain JBoss with help of this procedure it is possible to do the following:
				<ol>
                    <li>upload the deployment to content repository (when deployment does not exist there)</li>
					<li>upload the deployment to content repository (when deployment does not exist there) and assign it to specified server groups</li>
					<li>replace the deployment in content repository - force deploy (those server groups which are already assigned to the deployment now will use upgraded version).
					<br/>
					NOTE: it is not possible to assign deployment to specified server groups when it is upgrade (force deploy). It is limitation of jboss-cli 'deploy' command</li>
				</ol>
				NOTE: This procedure does not support assigning of the deployment which already exists in repository to specified server groups (just because "Application Content Source Path" is required parameter in this procedure - it is limitation of the procedure).
				<br/><br/>
				For JBoss Domain it is also possible to consider the following flow without using force flag:
				<ol>
                    <li>UndeployApp - undeploy app from all relevant server groups and remove from content repository (see <a href="#UndeployApp">UndeployApp</a> procedure)</li>
					<li>DeployApp - upload the deployment to content repository (when deployment does not exist there) and assign it to specified server groups</li>
				</ol>

                <h3>Input</h3>

                <ol>
                    <li>Go to the DeployApp procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>
										Required parameter.
										<br/>
										A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.
										To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.
									</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>
										Provide the physical location of the jboss Command Line Interface (CLI) script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'.
										If omitted, script location from configuration will be used.
									</td>
                                </tr>
                                <tr>
                                    <td class="required">Application Content Source Path</td>
                                    <td> Required parameter. <br />
                                        Either an absolute filepath (including the name of the WAR
                                        or EAR) or a URL that the Domain controller or the
                                        Standalone Server (as the case may be) <br />
                                        can resolve. URL is supported only for 7.0 EAP and later
                                        versions. <br />
                                        This parameter should be populated as follows.<br />
                                        <ol>
                                            <li>If using filepath, it should be the full filesystem
                                                path to the application that needs to be deployed. E.g.
                                                '/tmp/hello-world.war'</li>
                                            <li> If using URL it should be preceded by a -- prefix
                                                anchor. E.g.
                                                '--url=https://my.site.com/hello-world.war'. </li>
                                        </ol>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Deployment name</td>
                                    <td>
										Stands for '--name' parameter for jboss-cli 'deploy' command.
										<br/>
										The unique name of the deployment.
										If this parameter is not provided then JBoss will retrieve the deployment name from the file name of 'file_path' or '--url', see required 'Application Content Source Path' parameter.
									</td>
                                </tr>
                                <tr>
                                    <td>Runtime name for deployment</td>
                                    <td> Optional parameter.<br />
                                        The runtime name for the deployment. If not specified it
                                        will be the same as 'Deployment Name'.</td>
                                </tr>
                                <tr>
                                    <td>Apply to all servers (Domain only)</td>
                                    <td>
										For Domain only (will be ignored in case of Standalone).
										<br/>
										Stands for '--all-server-groups' parameter for jboss-cli 'deploy' command.
										<br/>
										NOTE:
										<ol>
											<li>this parameter will be ignored if 'Force deployment' is chosen</li>
											<li>'Server groups to apply' will be ignored if this parameter is chosen</li>
										</ol>
                                        This parameter indicates that deploy should apply to all the available server groups.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Server groups to apply (Domain only)</td>
                                    <td>
										For Domain only (will be ignored in case of Standalone).
										<br/>
										Stands for '--server-groups' parameter for jboss-cli 'deploy' command.
										<br/>
										NOTE: this parameter will be ignored if 'Apply to all servers' or 'Force deployment' is chosen.
										<br/>
                                        Provide comma separated list of server group names the deploy command should apply to.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Force deployment</td>
                                    <td>
										Stands for '--force' parameter for jboss-cli 'deploy' command.
										<br/>
										NOTE: in case of JBoss Domain if this parameter is chosen then 'Apply to all servers' and 'Server groups to apply' will be ignored.
										<br/>
										Chose this option in order to force the replacement of the existing deployment with the one specified in 'file_path' or '--url', see required 'Application Content Source Path' parameter.
										<br/>
										If 'Force deployment' is Off and the deployment with the specified deployment name (see 'Deployment name' parameter) already exists - deploy will fail and the corresponding message will printed.
									</td>
                                </tr>
                                <tr>
                                    <td>Additional options</td>
                                    <td>
										Additional options for jboss-cli 'deploy' command.
										<br/>
										The 'Additional options' string will be concatenated to already generated command line from the parameters above.
										<br/>
										E.g. if 'Application Content Source Path' is '/tmp/hello-world.war' and 'Additional options' is '--disabled' the the following jboss-cli command will be called:
										<br/>
										'deploy "/tmp/hello-world.war" --disabled'
										<br/>
										NOTE: it is recommended to not use duplicating options, e.g. no need to specify '--all-server-groups' because we have 'Apply to all servers' parameter for this.
										<br/>
										NOTE: for JBoss EAP 7 and later do not specify '--url' option here because we have special handling for such option within 'Application Content Source Path' parameter.
									</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
					For Example:
					<br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppForm1.PNG" />
                    <br />
					<img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppForm2.PNG" />
					<br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the application was deployed, what its expected deployment name and from where it was deployed, for example:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppStatus1.PNG" />
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppStatus2.PNG" />
				<br />
				<br />
				<p>And here is an example of run with errors, when JBoss did not accept parameters provided and replied with corresponding message. This message is in the job step summary:</p>
                <br />
				<img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppStatus3.PNG" />
				<br />
            </div>

            <div id="DeployApplication"> <a name="DeployApplication" id="DeployApplication"></a>
                <h2>DeployApplication (Standalone/Domain)</h2>
                The DeployApplication procedure deploys an application (mainly WAR or
                EAR) to a JBoss Standalone or Managed domain. The procedure will
                automatically detect as to which operating mode (Standalone/Domain)
                JBoss is running as. <br />
                <br />
                The DeployApplication procedure is a major improvement to the existing
                DeployApp procedure. It provides a very robust interface that brings in
                the complete range of possibilities(enabled/disabled states,
                enabled/disabled servergroups) from Jboss during deployment to a
                Domain. Most importantly its behavior is idempotent i.e., it leaves a
                deployment in the specified state every single time it runs and hence
                can be run as part of an environment template where in an Application
                that exists gets updated with new content or gets created otherwise.</div>
            <div><br />
            </div>
            <div>The Deployment Name is used as a unique identifier to know if a
                Deployment exists already. This can either be passed in 'Deployment
                Name' parameter or can be derived from the Application Content Source
                path parameter. </div>
            <div><br />
            </div>
            <div>The expected behavior of the procedure for a standalone is described
                below:</div>
            <div><br />
            </div>
            <ol>
                <li>
                    It will update the content repository if the deployment exists, else it will create the content.
                </li>
                <li>
                    It will enable the application by default, unless it is specified other wise through Additional Options (see below).
                </li>
                <li>
                    Enabled Server Groups and Disabled Server groups do not apply to standalone.
                </li>
            </ol>
            <div>The expected behavior of the procedure for a managed domain is
                described below: <br />
                <ol>
                    <li> It will update the content repository if the deployment exists,
                        else it will create the content. All server groups assigned to this
                        content will start using the upgraded version of the content. </li>
                    <li> Server Groups in 'Enabled Server Groups' and 'Disabled Server
                        Groups' parameters will be assigned to the new content if they are
                        not assigned already. </li>
                    <li> Server groups specified in 'Enabled Server Groups' parameter will
                        be enabled. </li>
                    <li>Server groups specified in 'Disabled Server Groups' parameter will
                        be disabled. </li>
                    <li>Server Groups that are not mentioned in 'Enabled Server Groups'
                        and 'Disabled Server Groups' parameters will retain their previous
                        state (before deployment). More specifically, if they were assigned
                        to the content before deployment, they will continue to be assigned
                        and if they were enabled/disabled before the deployment, they will
                        continue to be enabled/disabled respectively. </li>
                </ol>
                <h3>Input</h3>
                <ol>
                    <li>Go to the DeployApplication procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Application Content Source Path</td>
                                    <td> Required parameter. <br />
                                        Either an absolute filepath (including the name of the WAR
                                        or EAR) or a URL that the Domain controller or the
                                        Standalone Server (as the case may be) <br />
                                        can resolve. URL is supported only for 7.0 EAP and later
                                        versions. <br />
                                        This parameter should be populated as follows.<br />
                                        <ol>
                                            <li>If using filepath, it should be the full filesystem
                                                path to the application that needs to be deployed. E.g.
                                                '/tmp/hello-world.war'</li>
                                            <li> If using URL it should be preceded by a -- prefix
                                                anchor. E.g.
                                                '--url=https://my.site.com/hello-world.war'. </li>
                                        </ol>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Deployment Name</td>
                                    <td> Optional parameter.<br />
                                        The unique name of the deployment. <br />
                                        If this parameter is not passed, it will be derived from
                                        'Application Content Source Path' parameter.</td>
                                </tr>
                                <tr>
                                    <td>Runtime Name</td>
                                    <td> Optional parameter.<br />
                                        The runtime name for the deployment. If not specified it
                                        will be the same as 'Deployment Name'.</td>
                                </tr>
                                <tr>
                                    <td>Enabled Server Groups</td>
                                    <td> Applicable to Jboss Domain only.<br />
                                        Server groups specified in this parameter will be assigned
                                        (if not already assigned) and enabled. <br />
                                        These are the formatting rules: <br />
                                        Either a comma separated list of server groups (e.g.
                                        'server-group-one,server-group-five') or
                                        '--all-server-groups'. </td>
                                </tr>
                                <tr>
                                    <td>Disabled Server Groups</td>
                                    <td>Applicable to Jboss Domain only.<br />
                                        Server groups specified in this parameter will be assigned
                                        (if not already assigned) and disabled. <br />
                                        These are the formatting rules: <br />
                                        Either a comma separated list of server groups (e.g.
                                        'server-group-one,server-group-five') or
                                        '--all-server-groups'. </td>
                                </tr>
                                <tr>
                                    <td>Additional Options</td>
                                    <td>Applicable to JBoss Standalone only.<br />
                                        Currently supported additional option is '--disabled' for
                                        Standalone Server. If it is populated as '--disabled' the
                                        procedure will deploy the Application and leave it disabled.
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    For Example: <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeployApplication/ECJBossDeployApplicationForm1.PNG" />
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeployApplication/ECJBossDeployApplicationForm2.PNG" />
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeployApplication/ECJBossDeployApplicationForm3.PNG" />
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeployApplication/ECJBossDeployApplicationForm4.PNG" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results, including the
                    following job details which show that the application was deployed,
                    what its deployment name and from where it was deployed. For Managed
                    Domain there will be also information about the deployment state
                    (enabled/disabled) on server groups (if the deployment was assigned to
                    any). For example: </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeployApplication/ECJBossDeployApplicationStatus1.PNG" />
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeployApplication/ECJBossDeployApplicationStatus2.PNG" />
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeployApplication/ECJBossDeployApplicationStatus3.PNG" />
                <br />
            </div>

            <div id="DisableDeploy"><a name='DisableDeploy' id="DisableDeploy"></a>
                <h2>DisableDeploy</h2>
                <p>This procedure disables the specified deployment.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the DisableDeploy procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Deployment name</td>
                                    <td>The unique name of the deployment to disable.</td>
                                </tr>
                                <tr>
                                    <td>Server groups</td>
                                    <td>Provide the comma-separated list of server group names the disable deployment command applies to. Server groups parameter is required in domain mode. This argument is not applicable in standalone mode and will be ignored.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DisableDeploy/ECJBossDisableDeploy2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the deployment was disabled:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DisableDeploy/ECJBossDisableDeploy3.png" />
                <br />
                <p>In the <b>DisableDeploy</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DisableDeploy/ECJBossDisableDeploy4.png" />
                <br />
            </div>
            <div id="EnableDeploy"><a name='EnableDeploy' id="EnableDeploy"></a>
                <h2>EnableDeploy</h2>
                <p>This procedure enables the specified deployment
                    in the repository. This deployment is disabled and is currently not running.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the EnableDeploy procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Deployment name</td>
                                    <td>Unique name of the deployment to enable.</td>
                                </tr>
                                <tr>
                                    <td>Server groups</td>
                                    <td>Provide the comma-separated list of server group names the enable deployment command applies to. Server groups parameter is required in domain mode. This argument is not applicable in standalone mode and will be ignored.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/EnableDeploy/ECJBossEnableDeploy2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the deployment was enabled:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/EnableDeploy/ECJBossEnableDeploy3.png" />
                <br />
                <p>In the <b>EnableDeploy</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/EnableDeploy/ECJBossEnableDeploy4.png" />
                <br />
            </div>
            <div id="GetEnvInfo"> <a name="GetEnvInfo" id="GetEnvInfo"></a>
                <h2>GetEnvInfo</h2>
                This procedure returns different types of information about a Jboss environment
                and writes it to property and logs.
                <br/>
                Outputs can be found in the following places:
                <ul>
                    <li>envInfo property within job step</li>
                    <li>step logs under the "INFO: Requested Environment Information: " section</li>
                </ul>
                There are the types of Information(aka 'Information Types') that can be requested:
                <ul>
                    <li>System Dump</li>
                    <li>Profiles (for Domain only)</li>
                    <li>Data Sources</li>
                    <li>XA Data Sources</li>
                </ul>
                The following is provided as a quick reference to the different Jboss CLI calls invoked.
                <ul>
                    <li>
                        System Dump.
                        <br/>
                        CLI call: '/:read-resource'
                        <br/>
                        Output: <img src="../../plugins/@PLUGIN_NAME@/images/GetEnvInfo/GetEnvInfoSystemDump.PNG" />
                    </li>
                    <li>
                        Profiles (for Domain only).
                        <br/>
                        CLI call: '/:read-children-resources(child-type=profile)'
                        <br/>
                        Output: <img src="../../plugins/@PLUGIN_NAME@/images/GetEnvInfo/GetEnvInfoProfiles.PNG" />
                    </li>
                    <li>
                        Data Sources on Standalone or for a specific profile in a domain.
                        <br/>
                        CLI call on standalone: '/subsystem=datasources/:read-children-resources(child-type=data-source)'
                        <br/>
                        CLI call on 'full' profile within Domain: '/profile=full/subsystem=datasources/:read-children-resources(child-type=data-source)'
                        <br/>
                        Output: <img src="../../plugins/@PLUGIN_NAME@/images/GetEnvInfo/GetEnvInfoDataSources.PNG" />
                        <br/>
                        For XA Data Sources, it is very similar to above.
                    </li>
                    <li>
                        Data Sources on all profiles in a Domain.
                        <br/>
                        CLI call performed for every profile which contains 'datasources' subsystem: '/profile=full/subsystem=datasources/:read-children-resources(child-type=data-source)'
                        <br/>
                        Combined output: <img src="../../plugins/@PLUGIN_NAME@/images/GetEnvInfo/GetEnvInfoDataSourcesAllProfiles.PNG" />
                        <br/>
                        For XA Data Sources, it is very similar to above.
                        <br/>
                        Combined output: <img src="../../plugins/@PLUGIN_NAME@/images/GetEnvInfo/GetEnvInfoXADataSourcesAllProfiles.PNG" />
                    </li>
                </ul>
                <h3>Input</h3>
                <ol>
                    <li>Go to the GetEnvInfo procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Information Type</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        Information Type.
                                        Possible options:
                                        <ol>
                                            <li>System Dump</li>
                                            <li>Profiles (for Domain only)</li>
                                            <li>Data Sources</li>
                                            <li>XA Data Sources</li>
                                        </ol>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Information Type Context
                                    </td>
                                    <td>
                                        Optional parameter. Applies only when Information Type is "Data Sources" or "XA Data Sources".
                                        <br />
                                        Information Type Context.
                                        Enter the name of the Profile for which Information Type is requested for. If none the procedure would return for all profiles.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Additional Options</td>
                                    <td>
                                        Optional parameter.
                                        <br />
                                        'Additional Options' that can be included into CLI call to limit the information requested. For example, if you provide 'include-runtime=true,include-defaults=true'
                                        the procedure would call /:read-resource('include-runtime=true,include-defaults=true').
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>GetEnvInfo</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br/>
                <img src="../../plugins/@PLUGIN_NAME@/images/GetEnvInfo/GetEnvInfoRun.PNG" />
            </div>
            <div id="RemoveJMSQueue"> <a name="RemoveJMSQueue" id="RemoveJMSQueue"></a>
                <h2>RemoveJMSQueue</h2>
                This procedure removes an existing jms queue in the JBoss EAP messaging
                subsystem. <br />
                <br />
                JBoss EAP supports the following message brokers:
                <ol>
                    <li>HornetQ message broker in EAP 6.0+</li>
                    <li>ActiveMQ Artemis message broker in EAP 7.0+</li>
                </ol>
                Unique identifier for a JMS queue per operating mode are as follows:<br />
                <ol>
                    <li>For Standalone : 'Queue Name'</li>
                    <li>For Domain : 'Queue Name' and 'Profile'</li>
                </ol>
                The expected behavior of this procedure is described below </div>

            <div>If the specified queue exists it will be removed, else it will return
                a job status of warning. The following is an example of how the
                procedure invokes this operation using jms-cli</div>
            <div> <br />
            </div>
            <div> 'jms-queue --profile=full remove --queue-address=someQueue'
                <h3>Input</h3>
                <ol>
                    <li>Go to the RemoveJMSQueue procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Queue Name</td>
                                    <td> Required parameter. <br />
                                        Name of the Queue. </td>
                                </tr>
                                <tr>
                                    <td>Profile (Domain only)</td>
                                    <td> Required for Domain, will be ignored for Standalone <br />
                                        Name of profile in Domain form which queue should be
                                        removed. <br />
                                        For example: 'full', 'full-ha' </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/RemoveJMSQueue/RemoveJMSQueueForm1.PNG" />
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/RemoveJMSQueue/RemoveJMSQueueForm2.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>RemoveJMSQueue</b> step, click the Log
                    icon to see the diagnostic information. </p>
            </div>
            <div id="RemoveJMSTopic"> <a name="RemoveJMSTopic" id="RemoveJMSTopic"></a>
                <h2>RemoveJMSTopic</h2>
                This procedure removes an existing jms topic in the JBoss EAP messaging
                subsystem. <br />
                <br />
                JBoss EAP supports the following message brokers:
                <ol>
                    <li>HornetQ message broker in EAP 6.0+</li>
                    <li>ActiveMQ Artemis message broker in EAP 7.0+</li>
                </ol>
                Unique identifier for a JMS topic per operating mode are as follows:<br />
                <ol>
                    <li>For Standalone : 'Topic Name'</li>
                    <li>For Domain : 'Topic Name' and 'Profile'</li>
                </ol>
                The expected behavior of this procedure is described below </div>

            <div>If the specified topic exists it will be removed, else it will return
                a job status of warning. The following is an example of how the
                procedure invokes this operation using jms-cli</div>
            <div> <br />
            </div>
            <div> 'jms-topic --profile=full remove --topic-address=someTopic'
                <h3>Input</h3>
                <ol>
                    <li>Go to the RemoveJMSTopic procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Topic Name</td>
                                    <td> Required parameter. <br />
                                        Name of the Topic. </td>
                                </tr>
                                <tr>
                                    <td>Profile (Domain only)</td>
                                    <td> Required for Domain, will be ignored for Standalone <br />
                                        Name of profile in Domain form which topic should be
                                        removed. <br />
                                        For example: 'full', 'full-ha' </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/RemoveJMSTopic/RemoveJMSTopicForm1.PNG" />
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/RemoveJMSTopic/RemoveJMSTopicForm2.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>RemoveJMSTopic</b> step, click the Log
                    icon to see the diagnostic information. </p>
            </div>
            <div id="RemoveXADataSource"> <a name="RemoveXADataSource" id="RemoveXADataSource"></a>
                <h2>RemoveXADataSource</h2>
                This procedure removes an existing XA data source in the JBoss EAP 'datasources' subsystem.
                <br/>
                The existence of a data source is determined based on Unique Identifier Comparison based on the operating mode as per follows:
                <ul>
                    <li>For Standalone : 'Data Source Name'</li>
                    <li>For Domain : 'Data Source Name' and 'Profile'</li>
                </ul>
                The expected behavior of this procedure is described below
                <br/>
                If the specified XA data source exists it will be removed, else it will return a job status of warning.
                <br/>
                NOTE: In addition procedure will have parse JBoss response and report is as part of step summary. If JBoss response indicated that a restart or reload of server(s) is needed, the step status would be a warning.
                <br/>
                The following is an example of how the procedure invokes this operation using jboss-cli
                <br/>
                xa-data-source --profile=full remove --name=someDataSourceName
                <h3>Input</h3>
                <ol>
                    <li>Go to the RemoveXADataSource procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td class="required">Data Source Name</td>
                                    <td>
                                        Required parameter.
                                        <br />
                                        Name of the Data Source. This will also serve as the unique identifier for this resource. For example MysqlXADS.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Profile (Domain only)</td>
                                    <td>
                                        Required for Domain, will be ignored for Standalone
                                        <br />
                                        Name of the Server Profile to which this XA Data Source applies to.
                                        <br/>
                                        For example: 'full', 'full-ha'
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/RemoveXADataSource/RemoveXADataSourceForm1.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>RemoveXADataSource</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/RemoveXADataSource/RemoveXADataSourceRunScenarios.PNG" />
            </div>
            <div id="RunCustomCommand"> <a name='RunCustomCommand' id="RunCustomCommand"></a>
                <h2>RunCustomCommand</h2>
                <p>This procedure runs user-specified scripts or procedures on JBoss instances.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the RunCustomCommand procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Custom Command</td>
                                    <td>User-specified command or script to run on JBoss instances.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/RunCustomCommand/ECJBossRunCommand1.png" />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results in the Job Details page. In the <b>RunCustomCommand</b> step, click the Log icon to see the diagnostic information.</p>
            </div>
            <div id="ShutdownStandaloneServer"> <a name='ShutdownStandaloneServer' id="ShutdownStandaloneServer"></a>
                <h2>ShutdownStandaloneServer</h2>
                <p>The ShutdownStandaloneServer procedure shuts down a running standalone server.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the ShutdownStandaloneServer procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Server Configuration Name</td>
                                    <td>The name of the configuration for the JBoss server. This configuration has connection information
                                        about the standalone server. ElectricFlow uses the IP address and port number in the configuration.
                                        If this field is blank, ElectricFlow uses the default controller values (IP address and port number)
                                        to shut down the server.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/ShutdownStandalone/ECJBossShutdownStandalone2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results in the Job Details page. </p>
                <p>In the <b>ShutdownStandaloneServer</b> step, click the Log icon to see the diagnostic information. </p>
            </div>
            <div id="StartDomainServer"> <a name='StartDomainServer' id="StartDomainServer"></a>
                <h2>StartDomainServer</h2>
                <p>The StartDomainServer procedure starts a server in domain mode. A domain is a collection of servers.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StartDomainServer procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Physical location of the domain script</td>
                                    <td>Provide the absolute physical path of the domain script, i.e: 'domain.bat', '/usr/tools/bin/domain.sh', 'c:/Program Files/JBoss/bin/domain.bat'.</td>
                                </tr>
                                <tr>
                                    <td>Optional domain configuration name</td>
                                    <td>For domain controllers only. Name of the domain configuration file that ElectricFlow uses to start the domain controller with a different domain configuration (--domain-config). By default domain.xml is used.</td>
                                </tr>
                                <tr>
                                    <td>Optional host configuration name</td>
                                    <td>For domain and host controllers. Name of the host configuration file that ElectricFlow uses to start the domain or host controller with a different host configuration (--host-config). By default host.xml is used.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/StartDomainServer/ECJBossStartDomain2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the server is up:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartDomainServer/ECJBossStartDomain3.png" />
                <br />
                <p>In the <b>StartDomainServer</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartDomainServer/ECJBossStartDomain4.png" />
                <br />
            </div>
            <div id="StartHostController"> <a name='StartHostController' id="StartHostController"></a>
                <h2>StartHostController</h2>
                <p>This procedure can be used for starting a master or slave host controller for JBoss Domain.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StartHostController procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration Name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Startup Script</td>
                                    <td>Provide the absolute physical path of the domain script, i.e: 'domain.bat', '/usr/tools/bin/domain.sh', 'c:/Program Files/JBoss/bin/domain.bat'.</td>
                                </tr>
                                <tr>
                                    <td>Domain Config</td>
                                    <td>For domain controllers only. Name of the domain configuration file that ElectricFlow uses to start the domain controller with a different domain configuration (--domain-config). By default domain.xml is used.</td>
                                </tr>
                                <tr>
                                    <td>Host Config</td>
                                    <td>For domain and host controllers. Name of the host configuration file that ElectricFlow uses to start the domain or host controller with a different host configuration (--host-config). By default host.xml is used.</td>
                                </tr>
                                <tr>
                                    <td>Host Name</td>
                                    <td>Host name for verification via master CLI that host controller is started</td>
                                </tr>
                                <tr>
                                    <td>Additional Options</td>
                                    <td>Additional options</td>
                                </tr>
                                <tr>
                                    <td>Log File Location</td>
                                    <td>Log file location - is used for just showing tailing lines from the log file within procedure logs.</td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/StartHostController/StartHostControllerForm1.PNG" />
                        <br />
                    </li>
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the server is up:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartHostController/StartHostControllerRun1.PNG" />
                <br />
            </div>
            <div id="StartServers"> <a name='StartServers' id="StartServers"></a>
                <h2>StartServers (Domain)</h2>
                The StartServers procedure starts the servers in the specified server group and checks if these servers are started successfully.
				<br/><br/>
				This procedure is build around jboss-cli command 'start-servers' for the server groups, e.g. '/server-group=some-group-name:start-servers'.
				Check of servers statuses is done also with help of cli - basically the procedure checks 'status' attributes of needed servers on needed hosts (within specified server group), e.g. '/host=some-host-name/server-config=some-server-name:read-attribute(name=status)'.
				Expected value for started servers is 'STARTED'.
				<ol>
					<li>The procedure will be completed with success if all servers within server group are 'STARTED' and there were no 'STARTED' servers within the group before start-servers was called.</li>
					<li>The procedure will be completed with warning if all servers within server group are 'STARTED' and there were some 'STARTED' servers within the group before start-servers was called.</li>
					<li>The procedure will be completed with error if timeout for recurring check of servers is reached and not all servers are 'STARTED'.</li>
				</ol>
				List of all possible values of cli server statuses is the following (according to some WildFly open source code):
				<ol>
                    <li>STARTED - The server is started</li>
					<li>STOPPED - The server is stopped and configured to start automatically</li>
					<li>DISABLED - The server is stopped and configured not to start automatically</li>
					<li>STARTING - The server is starting</li>
					<li>STOPPING - The server is stopping</li>
					<li>FAILED - The server failed to start</li>
					<li>UNKNOWN - The status of the server is currently unknown. This is the status of any server whose host controller is currently unreachable</li>
					<li>DOES_NOT_EXIST - Status indicating the host controller does not recognize the server name</li>
				</ol>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StartServers procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>
										Required parameter.
										<br/>
										A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.
										To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.
									</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>
										Provide the physical location of the jboss Command Line Interface (CLI) script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'.
										If omitted, script location from configuration will be used.
									</td>
                                </tr>
                                <tr>
                                    <td class="required">Server group</td>
                                    <td>
										Required parameter.
										<br/>
										The name of the server group to start. The following cli command will be called: e.g. if 'some-group-name' is specified then '/server-group=some-group-name:start-servers' is called.
										</td>
                                </tr>
                                <tr>
                                    <td>Timeout for recurring check of servers (seconds)</td>
                                    <td>
										After start-servers command for the server group is called the procedure starts performing recurring check of servers if they are started ('status' attribute is 'STARTED', see procedure description).
										Delay between each check is 5 seconds (hard coded value). Check will be performed only one time if the timeout is not specified or it is less than 5 seconds. Default is 300 seconds.
										<ol>
											<li>The procedure will be completed with success if all servers within server group are 'STARTED' and there were no 'STARTED' servers within the group before start-servers was called.</li>
											<li>The procedure will be completed with warning if all servers within server group are 'STARTED' and there were some 'STARTED' servers within the group before start-servers was called.</li>
											<li>The procedure will be completed with error if timeout is reached and not all servers are 'STARTED'.</li>
										</ol>
									</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/StartServers/ECJBossStartServersForm1.PNG" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results in the Job Details page. In the <b>StartServers</b> step, click the Log icon to see the diagnostic information. For example</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartServers/ECJBossStartServersStatus1.PNG" />
                <br />
				<img src="../../plugins/@PLUGIN_NAME@/images/StartServers/ECJBossStartServersStatus2.PNG" />
                <br />
            </div>
            <div id="StartStandaloneServer"> <a name="StartStandaloneServer" id="StartStandaloneServer"></a>
                <h2>StartStandaloneServer</h2>
                <p>
                    This procedure can be used for starting JBoss as a Standalone Server.
                    <br/><br/>
                    Path to startup script (e.g. standalone.sh) and optionally additional options are expected to be passed as input parameters.
                    Example of startup call:
                    '/tmp/jboss/bin/standalone.sh --server-config=standalone-full.xml -b=0.0.0.0 -bmanagement=0.0.0.0'
                    Furthermore, configuration should be provided in order to perform checks via CLI that JBoss started correctly.
                    <br/><br/>
                    If JBoss Standalone Server is already started then there will be no attempt to start it again and job status will be Warning.
                    <br/><br/>
                    Once startup script is called by the procedure there will be recurring check whether it is possible to connect to CLI
                    and check that server state is 'running'
                    CLI command for this: '/:read-attribute(name=server-state)').
                    Timeout for recurring check is defined in the code as constant and is equal to 60 seconds.
                    If during this time procedure fail to indicate server state as 'running' then job status will be Error.
                    <br/><br/>
                    In case if CLI is available as a final step of the procedure there will be performed
                    reading of boot errors (CLI command for this: '/core-service=management/:read-boot-errors').
                    If any boot errors are detected then job Status will be Warning.
                    <br/><br/>
                    In addition, the procedure will try to provide more information within its logs by
                    reading recent logs via CLI (tail 100 lines from default file server.log)
                    and reading recent logs (tail 100 lines) from the 'Log File Location' (if it was specified within input parameters).
                    PS. There are no attempts to figure out logs location on the file system
                    due to the fact that there are too many options of how log file location can be configured in JBoss.
                </p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StartStandaloneSever procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration Name</td>
                                    <td>
                                        Required parameter.
                                        <br/>
                                        A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.
                                    </td>
                                </tr>
                                <tr>
                                    <td class='required'>Startup Script</td>
                                    <td>
                                        Required parameter.
                                        <br/>
                                        Provide the absolute physical path of the standalone script, i.e: 'standalone.bat', '/usr/tools/bin/standalone.sh', 'c:/Program Files/JBoss/bin/standalone.bat'.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Server Configuration File</td>
                                    <td>
                                        Optional parameter.
                                        <br/>
                                        Name of the server configuration file to use
                                        (stands for '--server-config' option for standalone startup script).
                                        For example: standalone-full.xml, standalone-full-ha.xml.
                                        By default standalone.xml is used.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Additional Options</td>
                                    <td>
                                        Optional parameter.
                                        <br/>
                                        'Additional options' to be passed on to standalone startup script.
                                        The parameters mentioned in this string will be concatenated to already generated command line for starting JBoss as a Standalone Server.
                                        For example:
                                        -b=0.0.0.0 -bmanagement=0.0.0.0
                                    </td>
                                </tr>
                                <tr>
                                    <td>Log File Location</td>
                                    <td>
                                        Optional parameter.
                                        <br/>
                                        To be used for providing more information about startup within procedure logs.
                                        If provided then the procedure will read recent 100 log lines
                                        from the specified file and include them into its own logs.
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/StartStandaloneSever/StartStandaloneSeverForm1.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>StopDomain</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartStandaloneSever/StartStandaloneSeverRun1.PNG" />
            </div>
            <div id="StopDomain"> <a name="StopDomain" id="StopDomain"></a>
                <h2>StopDomain</h2>
                This procedure stops all servers within a managed domain and optionally shuts down all host controllers.
                The following examples shows how the procedure stops servers and performs shutdown of all host controllers.
                <br />
                <br />
                For EAP 7.0:
                <ul>
                    <li>
                        :stop-servers(timeout=60)
                    </li>
                    <li>
                        shutdown --host=slave --timeout=60
                    </li>
                    <li>
                        shutdown --host=master --timeout=60
                    </li>
                </ul>
                For EAP 6.0 :
                <ul>
                    <li>
                        :stop-servers
                    </li>
                    <li>
                        /host=slave:shutdown
                    </li>
                    <li>
                        /host=master:shutdown
                    </li>
                </ul>
                NOTE:<b> timeout </b> is a new option introduced by Jboss in EAP 7.0. It is defined in the parameter section below.        <br />

                <h3>Input</h3>
                <ol>
                    <li>Go to the StopDomain procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="required">Configuration Name</td>
                                    <td> Required parameter. <br />
                                        A unique name of the configuration to be used. URL, port and
                                        credentials are retrieved from the given configuration. To
                                        view or create a new configuration, go to the Administration
                                        -&gt; Plugins tab, and select 'Configure' action for
                                        @PLUGIN_KEY@ plugin. </td>
                                </tr>
                                <tr>
                                    <td>Timeout</td>
                                    <td>
                                        Optional parameter. Supported only for EAP 7.X and ignored for EAP 6.X.
                                        <br />
                                        Timeout for stopping all servers within domain and for shutdown each host controller (if 'All Controllers Shutdown' is chosen).
                                        <br />
                                        For example, the following CLI commands can be called:
                                        <br/>
                                        :stop-servers(timeout=60)
                                        <br />
                                        shutdown --host=master --timeout=60
                                        <br />
                                        According to JBoss documentation: "The shutdown timeout in seconds.
                                        If this is zero then the server will shutdown immediately.
                                        A value larger than zero means the server will wait up to this many seconds for all active requests to finish.
                                        A value smaller than zero means that the server will wait indefinitely for all active requests to finish."
                                    </td>
                                </tr>
                                <tr>
                                    <td>All Controllers Shutdown</td>
                                    <td>
                                        Optional parameter.
                                        <br />
                                        Whether the procedure should perform shutdown of controllers. If chosen all controllers are shutdown one by one with the master host controller being shut down the last. If after shutting down, some servers are still in STOPPING STATUS the procedure will return a status of warning. By default this option is No ie., no host controller is shut down.
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <img src="../../plugins/@PLUGIN_NAME@/images/StopDomain/StopDomainForm1.PNG" />
                    </li>
                </ol>
                <h3>Output</h3>
                <p> After the job runs, you can view the results on the Job Details page
                    in ElectricFlow. In the <b>StopDomain</b> step, click the
                    Log icon to see the diagnostic information. </p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StopDomain/StopDomainRun1.PNG" />
            </div>
            <div id="StopServers"> <a name='StopServers' id="StopServers"></a>
                <h2>StopServers</h2>
				The StopServers procedure stops the servers in the specified server group and checks if these servers are stopped successfully.
				<br/><br/>
				This procedure is build around jboss-cli command 'stop-servers' for the server groups, e.g. '/server-group=some-group-name:stop-servers'.
				Check of servers statuses is done also with help of cli - basically the procedure checks 'status' attributes of needed servers on needed hosts (within specified server group), e.g. '/host=some-host-name/server-config=some-server-name:read-attribute(name=status)'.
				Expected value for stopped servers is 'STOPPED' or 'DISABLED' (similar statuses which indicate that servers are stopped, the difference is that 'DISABLED' status indicates that a server is configured to not start automatically while 'STOPPED' status indicates that a server is configured to start automatically).
				<ol>
					<li>The procedure will be completed with success if all servers within server group are 'STOPPED' or 'DISABLED' and there were no 'STOPPED' or 'DISABLED' servers within the group before stop-servers was called.</li>
					<li>The procedure will be completed with warning if all servers within server group are 'STOPPED' or 'DISABLED' and there were some 'STOPPED' or 'DISABLED' servers within the group before stop-servers was called.</li>
					<li>The procedure will be completed with error if timeout for recurring check of servers is reached and not all servers are 'STOPPED' or 'DISABLED'.</li>
				</ol>
				List of all possible values of cli server statuses is the following (according to some WildFly open source code):
				<ol>
                    <li>STARTED - The server is started</li>
					<li>STOPPED - The server is stopped and configured to start automatically</li>
					<li>DISABLED - The server is stopped and configured not to start automatically</li>
					<li>STARTING - The server is starting</li>
					<li>STOPPING - The server is stopping</li>
					<li>FAILED - The server failed to start</li>
					<li>UNKNOWN - The status of the server is currently unknown. This is the status of any server whose host controller is currently unreachable</li>
					<li>DOES_NOT_EXIST - Status indicating the host controller does not recognize the server name</li>
				</ol>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StopServers procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>
										A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.
										To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.
									</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>
										Provide the physical location of the jboss Command Line Interface (CLI) script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'.
										If omitted, script location from configuration will be used.
									</td>
                                </tr>
                                <tr>
                                    <td class='required'>Servers group</td>
                                    <td>
										Required parameter.
										<br/>
										The name of the server group to stop. The following cli command will be called: e.g. if 'some-group-name' is specified then '/server-group=some-group-name:stop-servers' is called.
									</td>
                                </tr>
                                <tr>
                                    <td>Timeout for recurring check of servers (seconds)</td>
                                    <td>
										After stop-servers command for the server group is called the procedure starts performing recurring check of servers if they are started ('status' attribute is 'STOPPED' or 'DISABLED', see procedure description).
										Delay between each check is 5 seconds (hard coded value). Check will be performed only one time if the timeout is not specified or it is less than 5 seconds. Default is 300 seconds.
										<ol>
											<li>The procedure will be completed with success if all servers within server group are 'STOPPED' or 'DISABLED' and there were no 'STOPPED' or 'DISABLED' servers within the group before stop-servers was called.</li>
											<li>The procedure will be completed with warning if all servers within server group are 'STOPPED' or 'DISABLED' and there were some 'STOPPED' or 'DISABLED' servers within the group before stop-servers was called.</li>
											<li>The procedure will be completed with error if timeout for recurring check of servers is reached and not all servers are 'STOPPED' or 'DISABLED'.</li>
										</ol>
									</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/StopServers/ECJBossStopServersForm1.PNG" />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results in the Job Details page. In the <b>StopServers</b> step, click the Log icon to see the diagnostic information. For example:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StopServers/ECJBossStopServersStatus1.PNG" />
                <br />
				<img src="../../plugins/@PLUGIN_NAME@/images/StopServers/ECJBossStopServersStatus2.PNG" />
                <br />
            </div>
            <div id="UndeployApp"> <a name='UndeployApp' id="UndeployApp"></a>
                <h2>UndeployApp</h2>
                <p>The UndeployApp procedure undeploys the specified application and may remove application from the repository.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the UndeployApp procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Deployment Name</td>
                                    <td>Unique name of the application (deployment) to undeploy.</td>
                                </tr>
                                <tr>
                                    <td>Apply undeploy to all server groups</td>
                                    <td>Select this option to apply undeploy to all server groups in which the deployment is enabled. Either server-groups or all-relevant-server-groups is required in domain mode. This argument is not applicable in standalone mode.</td>
                                </tr>
                                <tr>
                                    <td>Server groups to apply</td>
                                    <td>Provide the comma-separated list of server group names the undeploy command applies to.</td>
                                </tr>
                                <tr>
                                    <td>Keep content</td>
                                    <td>Select this option to disable the deployment and keep the content of the deployment, or unselect it to disable the deployment and removes its content from the repository.</td>
                                </tr>
                                <tr>
                                    <td>Wait time</td>
                                    <td>Wait time for terminal status in seconds. If not provided, only one check will be performed. If 0, it will wait until criteria is met. Default 300.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/UndeployApp/ECJBossUndeployApp2.png" />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the application was undeployed:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/UndeployApp/ECJBossUndeployApp3.png" />
                <br />
                <!--
                <p>In the <b>UndeployApp</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/UndeployApp/ECJBossUndeployApp4.png" />
                <br />
                -->
            </div>
            <h1 id="known-issues">Known Issues</h1>
            This section contains known limitations with different Jboss Server Versions that we found as part of System testing.
            <h2>Windows only. jboss-cli.bat from JBoss EAP 6 exits with wrong code.</h2>
            jboss-cli.bat does not exit with correct return code when calling it from a wrapper script. It always exits with 0, even if the operation failed.<br />
            For ElectricFlow it means that jboss-cli response may be interpreted wrong.<br />
            Details: <a href="https://bugzilla.redhat.com/show_bug.cgi?id=1223877" target="_BLANK">https://bugzilla.redhat.com/show_bug.cgi?id=1223877</a> <br />
            Solution:
            <p>
                Make sure that JBoss 6 with all updates is being used. For JBoss EAP 6.4 latest Cummulative Pack should be installed.
            </p>
            <br />

            <h2>All systems. jboss-cli in non-interactive (--command) mode still prompts user for input if certificate is not valid (self-signed, invalid, etc).</h2>
            Affects Secured JBoss connection only. If target certificate is not valid, self-signed, exported, etc, jboss-cli will ask for connection confirmation, even in non-interactive mode.
            <br />
            Details:<br />
            <a href="https://issues.jboss.org/browse/WFLY-2950">https://issues.jboss.org/browse/WFLY-2950</a>
            <a href="https://issues.jboss.org/browse/WFCORE-869">https://issues.jboss.org/browse/WFCORE-869</a>
            <br />
            This issue has not been fixed in the JBoss EAP 7. But --error-on-interact option as workaround has been added.
            <br />
            As result, plugin procedure may hang unexpectedly, if secured connection is being used and certificate is invalid.

            Solutions:
            <ul>
                <li>Use valid certificate.</li>
                <li>Use --error-on-interact as additional parameter. Procedure will not hang, but will be failed, if certificate is invalid.</li>
                <li>
                    In the plugin configuration, using "Additional Java options" field, provide keystore file with certificate accepted. It could be achieved with the following value:
                    <pre>-Djavax.net.ssl.trustStore=/path/to/your.keystore</pre>
                </li>
            </ul>
            <h2>All systems, JBoss 6.2, JBoss 6.0. CLI fails to show app status when runtime-name is different from the deployment name.</h2>
            jboss-cli may fail with "no metrics available" result during CheckDeployStatus procedure.
            <p>
                For details see: <a href="https://access.redhat.com/solutions/481643" target="_BLANK">https://access.redhat.com/solutions/481643</a>.<br />
                Bugzilla reference: <a href="https://bugzilla.redhat.com/show_bug.cgi?id=1007696" target="_BLANK">https://bugzilla.redhat.com/show_bug.cgi?id=1007696</a>. <br />
                WildFly reference: <a href="https://issues.jboss.org/browse/WFLY-2061" target="_BLANK">https://issues.jboss.org/browse/WFLY-2061</a>. <br />
            </p>
            Solution:
            <p>
                Latest version of JBoss 6.2 is required. This issue has been fixed in 6.2.1.
            </p>
            <br />
            <h2>Windows only, JBoss EAP 7.1. Failing to connect to controller when using password with special character '!'.</h2>
            jboss-cli.bat may fail due to "Failed to connect to the controller: Unable to authenticate against controller at ...
            Authentication failed: all available authentication mechanisms failed: DIGEST-MD5: javax.security.sasl.SaslException: DIGEST-MD5: Server rejected authentication".
            This is bug in jboss-cli.bat script - "Cannot connect to JBoss controller via CLI by passing password in command line if password contains '!' character (for JBoss EAP 7.1.0.GA in Windows)"
            <p>
                JIRA ticket for JBoss Enterprise Application Platform: <a href="https://issues.jboss.org/browse/JBEAP-14335" target="_BLANK">https://issues.jboss.org/browse/JBEAP-14335</a>.<br />
                JIRA ticket for WildFly Core: <a href="https://issues.jboss.org/browse/WFCORE-3674" target="_BLANK">https://issues.jboss.org/browse/WFCORE-3674</a>.<br />
            </p>
            <br />
            <h2>JBoss EAP 7.0. Create XA data sources with additional options (--check-valid-connection-sql) which contains single quotes.</h2>
            Single quotes are missed from --check-valid-connection-sql when adding xa data source via jboss-cli --command.
            <br/>
            Fixed in JBoss EAP 7.1
            <p>
                JIRA ticket for JBoss Enterprise Application Platform: <a href="https://issues.jboss.org/browse/JBEAP-14659" target="_BLANK">https://issues.jboss.org/browse/JBEAP-14659</a>.<br />
            </p>
            <br />
            <h2>JBoss EAP 6.3. Removing enabled XA data source failing. Removing services has lead to unsatisfied dependencies</h2>
            Removing XA data sources can fail when call remove command with the following error, e.g.:
            "JBAS014762: Removing services has lead to unsatisfied dependencies:
            Service jboss.data-source.reference-factory.MysqlXADSC289546 was depended upon by service jboss.naming.context.java.MysqlXADS
            Service jboss.xa-data-source-config.MysqlXADSC289546 was depended upon by service jboss.data-source.java:/MysqlXADS" (in Standalone)
            or
            "JBAS010839: Operation failed or was rolled back on all servers." (in Domain)
            <br/>
            <h1 id="rns">Release Notes</h1>
            <h2>@PLUGIN_KEY@ 2.6.0</h2>
            <ul>
                <li>Configured the plugin to allow the ElectricFlow UI to create configs inline of procedure form.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.5.0</h2>
            <ul>
                <li>
                    Following procedures have been added
                    <ul>
                        <li>
                            <a href="#CreateOrUpdateXADataSource">CreateOrUpdateXADataSource</a>
                        </li>
                        <li>
                            <a href="#RemoveXADataSource">RemoveXADataSource</a>
                        </li>
                        <li>
                            <a href="#StopDomain">StopDomain</a>
                        </li>
                        <li>
                            <a href="#GetEnvInfo">GetEnvInfo</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a href="#StartServers">StartServers</a> and <a href="#StopServers">StopServers</a>
                    <ul>
                        <li>Fixed step summary to show correct information if controller is not available</li>
                    </ul>
                </li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.4.1</h2>
            <ul>
                <li>Configured the plugin to allow the ElectricFlow UI to render the plugin procedure parameters entirely using the configured form XMLs.</li>
                <li>Enabled the plugin for managing the plugin configurations in-line when defining an application process step or a pipeline stage task.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.4.0</h2>
            <ul>
                <li>
                    Following procedures have been added
                    <ul>
                        <li>
                            <a href="#DeployApplication">DeployApplication</a>
                            - a major improvement to the existing DeployApp procedure. It provides a very robust interface and its behavior is idempotent.
                        </li>
                        <li>
                            <a href="#CreateOrUpdateJMSQueue">CreateOrUpdateJMSQueue</a>
                        </li>
                        <li>
                            <a href="#CreateOrUpdateJMSTopic">CreateOrUpdateJMSTopic</a>
                        </li>
                        <li>
                            <a href="#RemoveJMSQueue">RemoveJMSQueue</a>
                        </li>
                        <li>
                            <a href="#RemoveJMSTopic">RemoveJMSTopic</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a href="#DeployApp">DeployApp</a>
                    <ul>
                        <li>Renamed parameter "Path to the application to deploy" to "Application Content Source Path"</li>
                        <li>Added support of URL within "Application Content Source Path" for JBoss EAP 7.0 and later</li>
                        <li>Changed successful step summary</li>
                        <li>Improved documentation</li>
                    </ul>
                </li>
                <li>
                    <a href="#StartServers">StartServers</a>
                    <ul>
                        <li>Renamed parameter "Wait time" to "Timeout for recurring check of servers (seconds)"</li>
                        <li>Changed behavior for check of servers in order to perform check at least once</li>
                        <li>Improved documentation</li>
                    </ul>
                </li>
                <li>
                    <a href="#StopServers">StopServers</a>
                    <ul>
                        <li>Renamed parameter "Wait time" to "Timeout for recurring check of servers (seconds)"</li>
                        <li>Changed behavior for check of servers in order to perform check at least once</li>
                        <li>Changed warning step summary in order include information about already DISABLED servers (similar to information about already STOPPED servers)</li>
                        <li>Improved documentation</li>
                    </ul>
                </li>
                <li>
                    Fixed non-ascii characters in plugin forms.
                </li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.3.2</h2>
            <ul>
                <li>
                    <a href="#StartStandaloneServer">StartStandaloneServer</a>
                    <ul>
                        <li>Fixed handling of "Optional configuration name"</li>
                    </ul>
                </li>
                <li>
                    <a href="#StartDomainServer">StartDomainServer</a>
                    <ul>
                        <li>Renamed parameter "Optional configuration name" to "Optional domain configuration name"</li>
                        <li>Fixed handling of "Optional domain configuration name"</li>
                        <li>Added new parameter "Optional host configuration name"</li>
                    </ul>
                </li>
                <li>
                    <a href="#CheckServerStatus">CheckServerStatus</a>
                    <ul>
                        <li>Fixed check of "NOT RUNNING" success criteria</li>
                    </ul>
                </li>
                <li>
                    <a href="#StopServers">StopServers</a>
                    <ul>
                        <li>Expanded check of servers by handling of DISABLED server status (similar to handling of STOPPED server status)</li>
                    </ul>
                </li>
                <li>
                    Edit of JBoss configuration
                    <ul>
                        <li>Renamed parameter "JBoss AS URL" to "JBoss controller location"</li>
                    </ul>
                </li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.5</h2>
            <ul>
                <li>Form for DeleteDatasource has been changed. Property "application_name" has been renamed to "datasource_name".</li>
                <li>CheckHostControllerStatus procedure has been added.</li>
                <li>CheckServerGroupStatus procedure has been added.</li>
                <li>Fixed an issue when CheckDeploymentStatus was unable to check status of deployment in the domain mode.</li>
                <li>
                    Following fields have been added to CheckDeployStatus procedure
                    <ul>
                        <li>Hosts</li>
                        <li>ServerGroups</li>
                        <li>Servers</li>
                        <li>Criteria</li>
                        <li>Wait time</li>
                    </ul>
                </li>
                <li>"Additional Java options" and "Physical location of the jboss client script" fields have been added to configuration.</li>
                <li>"Physical location of the jboss client script" field has been updated and now it is optional.</li>
                <li>EnableDeploy procedure has been improved to work with both domain and standalone modes.</li>
                <li>DisableDeploy procedure has been improved to work with both domain and standalone modes.</li>
                <li>Fixed a bug when CreateDatasource was failed during enabling datasource on JBoss 6.0.0.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.4</h2>
            <ul>
                <li>Fixed issue with configurations being cached for IE.</li>
            </ul>

            <h2>@PLUGIN_KEY@ 2.1.3</h2>
            <ul>
                <li>Updated the ShutdownStandaloneServer, StartDomainServer, and StartStandaloneServer procedures.</li>
                <li>Added link to plugin Configuration Page in plugin step panels.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.2</h2>
            <ul>
                <li>Improved the plugin for better windows support. </li>
                <li>Replaced the Username and Password fields with credentials in the CreateDatasource procedure for backward incompatibility.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.1</h2>
            <ul>
                <li>Cleaned up the code.</li>
                <li>Fixed the procedure descriptions and updated the documentation.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.0 (February 24, 2015)</h2>
            <ul>
                <li>Added the RunCustomCommand procedure to run user-specified commands on JBoss instances.</li>
                <li>Added the StartServers procedure to start server groups.</li>
                <li>Added the StopServers procedure to stop server groups.</li>
                <li>Fixed the CreateDatasource procedure.</li>
                <li>Fixed the DeleteDatasource procedure.</li>
                <li>Fixed the DeployApp procedure.</li>
                <li>Fixed the UndeployApp procedure</li>
                <li>Fixed the EnableDeploy procedure.</li>
                <li>Fixed the DisableDeploy procedure.</li>
                <li>Fixed plugin errors on Linux ElectricFlow instances.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.7 (December 2014)</h2>
            <ul>
                <li>Fixed a POST_PROCESSOR_ERROR in the CheckServerStatus procedure.</li>
                <li>Fixed an error in the CheckDeployStatus procedure where the <i>Success Criteria</i> was set to "Page not found."</li>
                <li>Fixed a bug in the DeployApp procedure where the "Runtime name for deployment" was specified.</li>
            </ul>

            <h2>@PLUGIN_KEY@ 2.0.6 (June 2012)</h2>
            <ul>
                <li>Added five new procedures to check the status of deployments, create datasources, delete datasources,
                    stop servers, and restart servers.</li>
                <li>Fixed minor bugs.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.5 (April 2012)</h2>
            <ul>
                <li>Changed the procedure names in the step picker section.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.4 (March 2012)</h2>
            <ul>
                <li>Did minor fixes.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.3</h2>
            <ul>
                <li>Made improvements to the Help document.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.2</h2>
            <ul>
                <li>Upgraded the plugin to use the new XML parameter form.</li>
                <li>Added a direct link to the new Help document.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.1</h2>
            <ul>
                <li>Improved the XML parameter panels.</li>
                <li>Reformatted the Help document.</li>
            </ul>
        </div>
    </body>
</html>

