<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta name="generator" content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />
        <meta content="text/html; charset=us-ascii" http-equiv="content-type" />
        <title>ElectricFlow Plugin for JBoss EAP.</title>
        <link rel="stylesheet" href="../../plugins/@PLUGIN_KEY@/pluginhelp.css" type="text/css" media="screen" />
    </head>
    <body>
        <div class="help">
            <h1>@PLUGIN_KEY@</h1>
            <p>Plugin Version @PLUGIN_VERSION@</p>
            <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />

            <!-- The tool description should answer these kinds of questions: What is the tool itself is
                 used for in the development process? Who would use this tool? What is the general use case or problem
                 that this tool solves? Look at the tool documentation or websites to get the tool descriptions.
                 Look at Wikipedia or other outside websites. If there is a Hudson plugin, read their documentation for
                 ideas, examples, and so on. It is OK to copy them word-for-word only if it is appropriate, such as FOSS.
                 However, do not do this with commercial software. -->

            <p>Revised on March 7, 2017</p>

            <h1>Contents</h1>
            <p>
                <a href="#overview">Overview</a><br />
                <a href="#setupconfig">Setting Up the Plugin Configuration</a><br />
                <a href="#procedures">Plugin Procedures</a><br />
                <ul>
                    <li><a href="#CheckDeployStatus">CheckDeployStatus</a> (Standalone/Domain)</li>
                    <li><a href="#CheckHostControllerStatus">CheckHostControllerStatus</a> (Domain)</li>
                    <li><a href="#CheckServerGroupStatus">CheckServerGroupStatus</a> (Domain)</li>
                    <li><a href="#CheckServerStatus">CheckServerStatus</a> (Standalone/Domain)</li>
                    <li><a href="#CreateDatasource">CreateDatasource</a> (Standalone/Domain)</li>
                    <li><a href="#DeleteDatasource">DeleteDatasource</a> (Standalone/Domain)</li>
                    <li><a href="#DeployApp">DeployApp</a> (Standalone/Domain)</li>
                    <li><a href="#DisableDeploy">DisableDeploy</a> (Standalone/Domain)</li>
                    <li><a href="#EnableDeploy">EnableDeploy</a> (Standalone/Domain)</li>
                    <li><a href="#RunCustomCommand">RunCustomCommand</a> (Standalone/Domain)</li>
                    <li><a href="#ShutdownStandaloneServer">ShutdownStandaloneServer</a> (Standalone)</li>
                    <li><a href="#StartDomainServer">StartDomainServer</a> (Domain)</li>
                    <li><a href="#StartServers">StartServers</a> (Domain)</li>
                    <li><a href="#StartStandaloneServer">StartStandaloneServer</a> (Standalone)</li>
                    <li><a href="#StopServers">StopServers</a> (Domain)</li>
                    <li><a href="#UndeployApp">UndeployApp</a> (Standalone/Domain)</li>
                </ul>
                <a href="#known-issues">Known Issues</a><br />
                <a href="#rns">Release Notes</a>
            </p>
            <h1 id="overview">Overview</h1>
            <p>
                JBoss Application Server (JBoss AS) is an open-source Java EE-based application server. This class of software
                implements a server that runs on Java and the Java EE part of Java. Because it is Java-based, the JBoss AS operates
                cross-platform. You can use it on any operating system that supports Java. JBoss AS was developed by JBoss, which is now a
                division of Red Hat.
            </p>
            <p>For more information, go to the following:</p>
            <ul>
                <li>
                    <a href="https://docs.jboss.org/author/display/AS7/Getting+Started+Guide" target="_blank">JBoss AS7 Getting Started Guide</a>
                </li>
                <li>
                    <a href="http://community.jboss.org/wiki/JBossAS7UserGuide" target="_blank"> JBoss AS7 User Guide</a>
                </li>
                <li>
                    <a href="http://community.jboss.org/wiki/CLINon-interactiveMode" target="_blank">JBoss 7 CLI Non-Interactive Mode</a>
                </li>
            </ul>
            <h2>ElectricFlow Integration to JBoss</h2>
            <!-- The integration description should answer the questions: How deep does our integration go?
                 Why should I care? What general functionality does the plugin include? What functionality does the plugin omit? -->

            <p>
                Use the EC-JBoss plugin to interact with the JBoss EAP Server Version 7 (JBoss EAP 7) to do tasks such as managing servers and deployments.
            </p>

            <h2>Supported Versions</h2>
            <p>
                This plugin was developed and tested with following JBoss versions:
                <ul>
                    <li>JBoss EAP 6.0 on Linux and Windows</li>
                    <li>JBoss EAP 6.2 on Linux and Windows</li>
                    <li>JBoss EAP 6.4 on Linux and Windows</li>
                    <li>JBoss EAP 7.0 on Linux and Windows</li>
                </ul>
            </p>
            <p>
                <b>Important</b>: For all parameter descriptions in the following sections, the required parameters are in <span class='required'>bold italics</span>.
            </p>

            <div>
                <a id="CreateConfiguration"></a>
                <h1 id="setupconfig">Setting Up the Plugin Configuration</h1>

                <!-- If the plugin has separate configuration procedures, include this section; If not, omit
                     this whole section. We do not need a configuration section that just says "There is no
                     configuration for this plugin." -->

                <p>
                    Plugin configurations are sets of parameters that apply across some or all of the plugin procedures.
                    They reduce repetition of common values, create predefined sets of parameters for end users, and
                    store credentials securely. Each configuration has a unique name that is automatically entered in
                    designated parameters in the procedures.
                </p>
                <h2>Input</h2>
                <ol>
                    <li>Go to <b>Administration</b> > <b>Plugins</b> to open the Plugin Manager.</li>
                    <li>Find the @PLUGIN_KEY@ row.</li>
                    <li>Click <b>Configure</b> to open the JBoss Configurations page.</li>
                    <li>Click <b>Create Configuration</b>.</li>
                    <li>To enable ElectricFlow to communicate with your JBoss AS, enter the following information. You may need to create additional
                        configurations later, especially when using standalone and domain servers, because they use different port numbers.<br /> </li>

                    <!-- For all parameters, the parameter name should be exactly the same as it appears in the Parameter Panel,
                         and the first sentences of the description should be the same as the tooltip (if there is one). After that,
                         the parameter description can go into more detail about the parameter including valid value ranges and examples. -->
                    <table class="grid">
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class='required'>Configuration name</td>
                                <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                            </tr>
                            <tr>
                                <td class='required'>JBoss controller location</td>
                                <td>
                                    JBoss controller location. For example: localhost:9999. You can find this information in "$JBOSS_HOME/bin/jboss-cli.xml". If secured connection is being used, see Known Issues section in the documentation.
                                </td>
                            </tr>
                            <tr>
                                <td>Physical location of the jboss client script</td>
                                <td>Provide the physical location of the jboss Command Line Interface script, i.e: <i>jboss-cli.bat</i>, <i>/path/to/jboss-cli.sh</i></td>
                            </tr>
                            <tr>
                                <td>Login as</td>
                                <td><i>Username</i>: The user name that ElectricFlow uses to communicate with the JBoss server.<br />
                                    <i>Password</i>: Provide the password for the <i>Username</i>.<br />
                                    <i>Retype Password</i>: Re-enter the password.
                                </td>
                            </tr>
                            <tr>
                                <td>Additional Java options</td>
                                <td>Additional java options. This line will be added to the value of JAVA_OPTS environment variable.</td>
                            </tr>
                        </tbody>
                    </table>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/Config/ECJBossConfig.png" />
                    <br />
                </ol>
                <h2>Output</h2>
                <p>The JBoss Configurations page now shows the new configuration.</p>
            </div>
            <h1 id="procedures">Plugin Procedures</h1>

            <div id="CheckDeployStatus">
                <h2>CheckDeployStatus</h2>
                <p>This procedure checks the status of a deployed application using jboss client script.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CheckDeployStatus procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Deployment Name</td>
                                    <td>Unique name of the deployment.</td>
                                </tr>

                                <tr>
                                    <td>Hosts</td>
                                    <td>Provide the comma-separated list of host names.</td>
                                </tr>
                                <tr>
                                    <td>Server groups</td>
                                    <td>Provide the comma-separated list of server group names. If "Hosts" parameter has been provided, procedure will search for server groups within that hosts list.</td>
                                </tr>
                                <tr>
                                    <td>Servers</td>
                                    <td>Provide the comma-separated list of server names. If "Server groups" parameter has been provided, procedure will search for servers within that group.</td>
                                </tr>
                                <tr>
                                    <td class="required">Success criteria</td>
                                    <td>A desired terminal status of the deployment. The procedure will fail if criteria will not be reached.</td>
                                </tr>
                                <tr>
                                    <td>Wait time</td>
                                    <td>Wait time for terminal status in seconds. If not provided, only one check will be performed. If 0, it will wait until criteria is met. Default 300.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckDeployStatus/ECJBossCheckDeployStatus2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>
                    After the job runs, you can view the results on the Job Details page in ElectricFlow. In the <b>CheckDeployStatus</b> step, click the Log icon to see the diagnostic information and status of the deployment: 
                    
                </p>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckDeployStatus/ECJBossCheckDeployStatus3.png" />
                    <br />
                <p>
                    In the <b>CheckDeployStatus</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckDeployStatus/ECJBossCheckDeployStatus4.png" />
                <br />


            </div>
            <div id="CheckHostControllerStatus"> <a name="CheckHostControllerStatus" id="CheckHostControllerStatus"></a>
                <h2>CheckHostControllerStatus</h2>
                <p>The CheckHostControllerStatus procedure checks status of JBoss' Host Controller.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CheckHostControllerStatus procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Host controller name</td>
                                    <td>Host controller name. Default is 'master'.</td>
                                </tr>
                                <tr>
                                    <td>Wait time</td>
                                    <td>Wait time for terminal state in seconds. If not provided, only one check will be performed. If 0, it will wait until criteria is met. Default 300.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Success criteria</td>
                                    <td>A desired terminal status of the host controller. The procedure will fail if criteria will not be reached.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckHostControllerStatus/CheckHostControllerStatus2.png" />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that host controller is running.</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckHostControllerStatus/CheckHostControllerStatus3.png" />
                <br />
                <p>In the <b>CheckHostControllerStatus</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckHostControllerStatus/CheckHostControllerStatus4.png" />
                <br />
            </div>
            <div id="CheckServerStatus">
                <h2>CheckServerStatus</h2>
                <p>The CheckServerStatus procedure checks the status of the specified server.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CheckServerStatus procedure.</li>
                    <li>Enter the following parameters: <br />
                    <table class="grid">
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class='required'>Configuration name</td>
                                <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                            </tr>
                            <tr>
                                <td>Physical location of the jboss client script</td>
                                <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                            </tr>
                        </tbody>
                    </table>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerStatus/ECJBossCheckServerStatus2.png" />
                    <br />
                    </li>
                </ol>
                <h3>Output</h3>
                <p>
                    After the job runs, you can view the results on the Job Details page in ElectricFlow. In the <b>CheckServerStatus</b> step,
                    click the Log icon to see the diagnostic information.
                </p>
                <!--
                    <p>After the job runs, you can view the results, including the following job details, which show
                        that the job was completed:</p>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerStatus/ECJBossShutdownStandalone3.png" />
                    <br />
                <p>In the <b>CheckServerStatus</b> step, click the Log icon to see the diagnostic information. The output is similar
                    to the following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerStatus/ECJBossShutdownStandalone4.png" />
                <br />
                -->
            </div>

            <div id="CreateDatasource">
                <a name='CreateDatasource' id="CreateDatasource"></a>
                <h2>CreateDatasource</h2>
                <p>This procedure creates a datasource in JBoss.</p>
                <h3>Input</h3>

                <ol>
                    <li>Go to the CreateDatasource procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Application Name</td>
                                    <td>The name of the application to deploy.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Connection driver URL</td>
                                    <td>The URL for the JDBC driver connection, such as <i>jdbc:mysql://localhost:3306/ectest</i>.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Driver class</td>
                                    <td>The fully qualifed name of the JDBC driver class, such as <i>com.mysql.jdbc.Driver</i>.</td>
                                </tr>
                                <tr>
                                    <td class='required'>JNDI name</td>
                                    <td>The JNDI name for the datasource that should start with java:/ or java:jboss/, such as <i>java:jboss/datasources/MySql</i>.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Driver name</td>
                                    <td>The JDBC driver used by the datasource that can be the name of the .jar file or of the module, such as <i>mysql-connector-java-5.1.20-bin.jar</i>,
                                        depending on how the driver has been deployed.</td>
                                </tr>
                                <tr>
                                    <td>Profile name</td>
                                    <td>The name of the profile used in domain mode.</td>
                                </tr>
                                <tr>
                                    <td>Datasource credential</td>
                                    <td>Credential that contains username and password for data source (need to be attached to step).</td>
                                </tr>
                                <tr>
                                    <td>Enable datasource?</td>
                                    <td>Select this parameter to enable the datasource after it is created.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CreateDatasource/ECJBossCreateDatasource2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>
                    After the job runs, you can view the results on the Job Details page in ElectricFlow. In the <b>CreateDatasource</b> step,
                    click the Log icon to see the diagnostic information.
                </p>
                <!--
                    <p>After the job runs, you can view the results, including the following job details, which show that the datasource was
                        created succesfully:</p>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/CreateDatasource/ECJBossCreateDatasource3.png" />
                    <br />
                <p>In the <b>CreateDatasource</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/CreateDatasource/ECJBossCreateDatasource4.png" />
                <br />
                -->
            </div>
            <div id="DeleteDatasource"> <a name='DeleteDatasource' id="DeleteDatasource"></a>
                <h2>DeleteDatasource</h2>
                <p>This procedure deletes a datasource in JBoss.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the DeleteDatasource procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Application Name</td>
                                    <td>The name of the application to deploy.</td>
                                </tr>
                                <tr>
                                    <td>Profile Name</td>
                                    <td>The name of the profile used in domain mode.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>

                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeleteDatasource/ECJBossDeleteDatasource2.png" />
                    <br />
                </ol>

                <h3>Output</h3>
                <p>
                    After the job runs, you can view the results on the Job Details page in ElectricFlow. In the <b>DeleteDatasource</b> step,
                    click the Log icon to see the diagnostic information.
                </p>
                <!--
                    <p>After the job runs, you can view the results, including the following job details, which show that the datasource
                        was deleted succesfully:</p>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeleteDatasource/ECJBossDeleteDatasource3.png" />
                    <br />
                <p>In the <b>DeleteDatasource</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeleteDatasource/ECJBossDeleteDatasource4.png" />
                <br />
                -->
            </div>
            <div id="DeployApp"> <a name='DeployApp' id="DeployApp"></a>
                <h2>DeployApp (Standalone/Domain)</h2>
				The DeployApp procedure deploys an application (mainly WAR or EAR) from the specified source (usually from filepath) to standalone server (for Standalone JBoss) or to content repository and specified server groups (for Domain JBoss) based on provided parameters.
				<br/><br/>
				This procedure is build around jboss-cli command 'deploy' and most parameters are corresponding.
				<br/><br/>
				For Standalone server: if the application was already deployed to the server and has to be replaced then deploy should be performed with force flag.
				Or it is possible to undeploy the application (see <a href="#UndeployApp">UndeployApp</a> procedure) before deploying a new version (then force flag is not required).
				<br/><br/>
				For Domain JBoss with help of this procedure it is possible to do the following: 
				<ol>
                    <li>upload the deployment to content repository (when deployment does not exist there)</li>
					<li>upload the deployment to content repository (when deployment does not exist there) and assign it to specified server groups</li>
					<li>replace the deployment in content repository - force deploy (those server groups which are already assigned to the deployment now will use upgraded version).
					<br/>
					NOTE: it is not possible to assign deployment to specified server groups when it is upgrade (force deploy). It is limitation of jboss-cli 'deploy' command</li>
				</ol>
				NOTE: This procedure does not support assigning of the deployment which already exists in repository to specified server groups (just because "Source with application for deploy" is required parameter in this procedure - it is limitation of the procedure).
				<br/><br/>
				For JBoss Domain it is also possible to consider the following flow without using force flag:
				<ol>
                    <li>UndeployApp - undeploy app from all relevant server groups and remove from content repository (see <a href="#UndeployApp">UndeployApp</a> procedure)</li>
					<li>DeployApp - upload the deployment to content repository (when deployment does not exist there) and assign it to specified server groups</li>
				</ol>
				
                <h3>Input</h3>

                <ol>
                    <li>Go to the DeployApp procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>
										Required parameter.
										<br/>
										A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.
										To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.
									</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>
										Provide the physical location of the jboss Command Line Interface (CLI) script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'.
										If omitted, script location from configuration will be used.
									</td>
                                </tr>
                                <tr>
                                    <td class='required'>Application Content Source Path</td>
                                    <td>
										Required parameter.
										<br/>
										Stands for 'file_path' parameter for jboss-cli 'deploy' command, but it is also possible to provide '--url' parameter here for JBoss EAP 7 and later versions.						
										<ol>
											<li>in case of 'file_path' - pass full filesystem path to the application to deploy. E.g. '/tmp/hello-world.war'</li>
											<li>
												in case of '--url' (for EAP 7 and later) - pass URL at which the deployment content is available.
												NOTE: The expected format in this case should include prefix anchor '--url=', e.g. '--url=https://my.site.com/hello-world.war'.
												Note that the URL must be accessible from the target of the operation (i.e. the Domain Controller or standalone server).
											</li>
										</ol>
									</td>
                                </tr>
                                <tr>
                                    <td>Deployment name</td>
                                    <td>
										Stands for '--name' parameter for jboss-cli 'deploy' command.
										<br/>
										The unique name of the deployment.
										If this parameter is not provided then JBoss will retrieve the deployment name from the file name of 'file_path' or '--url', see required 'Source with application for deploy' parameter.
									</td>
                                </tr>
                                <tr>
                                    <td>Runtime name for deployment</td>
                                    <td>
										Stands for '--runtime-name' parameter for jboss-cli 'deploy' command.
										<br/>
										The runtime name for the deployment.
										<br/>
										NOTE: the file extension (.war, .jar, .ear etc.) needs to be included into runtime name so server can distinguish type of deployment somehow.
										<br/>			
										This would typically be the same as '--name' (see 'Deployment name' parameter), and if not specified the value used for '--name' will be used.
										In some cases users may wish to have two deployments with the same 'runtime-name' (e.g. two versions of "example.war") both available in the management configuration,
										in which case the deployments would need to have distinct 'name' values but would have the same 'runtime-name'.
										Within an individual server, only one deployment with a given 'runtime-name' can deployed.
										However, multiple deployments with the same 'runtime-name' can exist in the configuration, so long as only one is enabled.
									</td>
                                </tr>
                                <tr>
                                    <td>Apply to all servers (Domain only)</td>
                                    <td>
										For Domain only (will be ignored in case of Standalone).
										<br/>
										Stands for '--all-server-groups' parameter for jboss-cli 'deploy' command.
										<br/>
										NOTE:
										<ol>
											<li>this parameter will be ignored if 'Force deployment' is chosen</li>
											<li>'Server groups to apply' will be ignored if this parameter is chosen</li>
										</ol>
                                        This parameter indicates that deploy should apply to all the available server groups.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Server groups to apply (Domain only)</td>
                                    <td>
										For Domain only (will be ignored in case of Standalone).
										<br/>
										Stands for '--server-groups' parameter for jboss-cli 'deploy' command.
										<br/>
										NOTE: this parameter will be ignored if 'Apply to all servers' or 'Force deployment' is chosen.
										<br/>
                                        Provide comma separated list of server group names the deploy command should apply to.
                                    </td>
                                </tr>
                                <tr>
                                    <td>Force deployment</td>
                                    <td>
										Stands for '--force' parameter for jboss-cli 'deploy' command.
										<br/>
										NOTE: in case of JBoss Domain if this parameter is chosen then 'Apply to all servers' and 'Server groups to apply' will be ignored.
										<br/>
										Chose this option in order to force the replacement of the existing deployment with the one specified in 'file_path' or '--url', see required 'Source with application for deploy' parameter.
										<br/>
										If 'Force deployment' is Off and the deployment with the specified deployment name (see 'Deployment name' parameter) already exists - deploy will fail and the corresponding message will printed.
									</td>
                                </tr>
                                <tr>
                                    <td>Additional options</td>
                                    <td>
										Additional options for jboss-cli 'deploy' command.
										<br/>
										The 'Additional options' string will be concatenated to already generated command line from the parameters above.
										<br/>
										E.g. if 'Source with application for deploy' is '/tmp/hello-world.war' and 'Additional options' is '--disabled' the the following jboss-cli command will be called:
										<br/>
										'deploy "/tmp/hello-world.war" --disabled'
										<br/>
										NOTE: it is recommended to not use duplicating options, e.g. no need to specify '--all-server-groups' because we have 'Apply to all servers' parameter for this.
										<br/>
										NOTE: for JBoss EAP 7 and later do not specify '--url' option here because we have special handling for such option within 'Source with application for deploy' parameter.
									</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
					For Example:
					<br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppForm1.PNG" />
                    <br />
					<img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppForm2.PNG" />
					<br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the application was deployed, what its expected deployment name and from where it was deployed, for example:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppStatus1.PNG" />
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppStatus2.PNG" />
				<br />
				<br />
				<p>And here is an example of run with errors, when JBoss did not accept parameters provided and replied with corresponding message. This message is in the job step summary:</p>
                <br />
				<img src="../../plugins/@PLUGIN_NAME@/images/DeployApp/ECJBossDeployAppStatus3.PNG" />
				<br />
            </div>

            <div id="DisableDeploy"><a name='DisableDeploy' id="DisableDeploy"></a>
                <h2>DisableDeploy</h2>
                <p>This procedure disables the specified deployment.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the DisableDeploy procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Deployment name</td>
                                    <td>The unique name of the deployment to disable.</td>
                                </tr>
                                <tr>
                                    <td>Server groups</td>
                                    <td>Provide the comma-separated list of server group names the disable deployment command applies to. Server groups parameter is required in domain mode. This argument is not applicable in standalone mode and will be ignored.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/DisableDeploy/ECJBossDisableDeploy2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the deployment was disabled:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DisableDeploy/ECJBossDisableDeploy3.png" />
                <br />
                <p>In the <b>DisableDeploy</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/DisableDeploy/ECJBossDisableDeploy4.png" />
                <br />
            </div>
            <div id="EnableDeploy"><a name='EnableDeploy' id="EnableDeploy"></a>
                <h2>EnableDeploy</h2>
                <p>This procedure enables the specified deployment
                    in the repository. This deployment is disabled and is currently not running.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the EnableDeploy procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Deployment name</td>
                                    <td>Unique name of the deployment to enable.</td>
                                </tr>
                                <tr>
                                    <td>Server groups</td>
                                    <td>Provide the comma-separated list of server group names the enable deployment command applies to. Server groups parameter is required in domain mode. This argument is not applicable in standalone mode and will be ignored.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/EnableDeploy/ECJBossEnableDeploy2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the deployment was enabled:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/EnableDeploy/ECJBossEnableDeploy3.png" />
                <br />
                <p>In the <b>EnableDeploy</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/EnableDeploy/ECJBossEnableDeploy4.png" />
                <br />
            </div>
            <div id="RunCustomCommand"> <a name='RunCustomCommand' id="RunCustomCommand"></a>
                <h2>RunCustomCommand</h2>
                <p>This procedure runs user-specified scripts or procedures on JBoss instances.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the RunCustomCommand procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Custom Command</td>
                                    <td>User-specified command or script to run on JBoss instances.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/RunCustomCommand/ECJBossRunCommand1.png" />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results in the Job Details page. In the <b>RunCustomCommand</b> step, click the Log icon to see the diagnostic information.</p>
            </div>
            <div id="ShutdownStandaloneServer"> <a name='ShutdownStandaloneServer' id="ShutdownStandaloneServer"></a>
                <h2>ShutdownStandaloneServer</h2>
                <p>The ShutdownStandaloneServer procedure shuts down a running standalone server.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the ShutdownStandaloneServer procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Server Configuration Name</td>
                                    <td>The name of the configuration for the JBoss server. This configuration has connection information
                                        about the standalone server. ElectricFlow uses the IP address and port number in the configuration.
                                        If this field is blank, ElectricFlow uses the default controller values (IP address and port number)
                                        to shut down the server.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/ShutdownStandalone/ECJBossShutdownStandalone2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results in the Job Details page. </p>
                <p>In the <b>ShutdownStandaloneServer</b> step, click the Log icon to see the diagnostic information. </p>
            </div>
            <div id="StartDomainServer"> <a name='StartDomainServer' id="StartDomainServer"></a>
                <h2>StartDomainServer</h2>
                <p>The StartDomainServer procedure starts a server in domain mode. A domain is a collection of servers.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StartDomainServer procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Physical location of the domain script</td>
                                    <td>Provide the absolute physical path of the domain script, i.e: 'domain.bat', '/usr/tools/bin/domain.sh', 'c:/Program Files/JBoss/bin/domain.bat'.</td>
                                </tr>
                                <tr>
                                    <td>Optional domain configuration name</td>
                                    <td>For domain controllers only. Name of the domain configuration file that ElectricFlow uses to start the domain controller with a different domain configuration (--domain-config). By default domain.xml is used.</td>
                                </tr>
                                <tr>
                                    <td>Optional host configuration name</td>
                                    <td>For domain and host controllers. Name of the host configuration file that ElectricFlow uses to start the domain or host controller with a different host configuration (--host-config). By default host.xml is used.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/StartDomainServer/ECJBossStartDomain2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the server is up:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartDomainServer/ECJBossStartDomain3.png" />
                <br />
                <p>In the <b>StartDomainServer</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartDomainServer/ECJBossStartDomain4.png" />
                <br />
            </div>
            <div id="StartServers"> <a name='StartServers' id="StartServers"></a>
                <h2>StartServers (Domain)</h2>
                The StartServers procedure starts the servers in the specified server group and checks if these servers are started successfully.
				<br/><br/>
				This procedure is build around jboss-cli command 'start-servers' for the server groups, e.g. '/server-group=some-group-name:start-servers'.
				Check of servers statuses is done also with help of cli - basically the procedure checks 'status' attributes of needed servers on needed hosts (within specified server group), e.g. '/host=some-host-name/server-config=some-server-name:read-attribute(name=status)'.
				Expected value for started servers is 'STARTED'.
				<ol>
					<li>The procedure will be completed with success if all servers within server group are 'STARTED' and there were no 'STARTED' servers within the group before start-servers was called.</li>
					<li>The procedure will be completed with warning if all servers within server group are 'STARTED' and there were some 'STARTED' servers within the group before start-servers was called.</li>
					<li>The procedure will be completed with error if timeout for recurring check of servers is reached and not all servers are 'STARTED'.</li>
				</ol>
				List of all possible values of cli server statuses is the following (according to some WildFly open source code):
				<ol>
                    <li>STARTED - The server is started</li>
					<li>STOPPED - The server is stopped and configured to start automatically</li>
					<li>DISABLED - The server is stopped and configured not to start automatically</li>
					<li>STARTING - The server is starting</li>
					<li>STOPPING - The server is stopping</li>
					<li>FAILED - The server failed to start</li>
					<li>UNKNOWN - The status of the server is currently unknown. This is the status of any server whose host controller is currently unreachable</li>
					<li>DOES_NOT_EXIST - Status indicating the host controller does not recognize the server name</li>
				</ol>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StartServers procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>
										Required parameter.
										<br/>
										A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.
										To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.
									</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>
										Provide the physical location of the jboss Command Line Interface (CLI) script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'.
										If omitted, script location from configuration will be used.
									</td>
                                </tr>
                                <tr>
                                    <td class="required">Server group</td>
                                    <td>
										Required parameter.
										<br/>
										The name of the server group to start. The following cli command will be called: e.g. if 'some-group-name' is specified then '/server-group=some-group-name:start-servers' is called.
										</td>
                                </tr>
                                <tr>
                                    <td>Timeout for recurring check of servers (seconds)</td>
                                    <td>
										After start-servers command for the server group is called the procedure starts performing recurring check of servers if they are started ('status' attribute is 'STARTED', see procedure description).
										Delay between each check is 5 seconds (hard coded value). Check will be performed only one time if the timeout is not specified or it is less than 5 seconds. Default is 300 seconds.
										<ol>
											<li>The procedure will be completed with success if all servers within server group are 'STARTED' and there were no 'STARTED' servers within the group before start-servers was called.</li>
											<li>The procedure will be completed with warning if all servers within server group are 'STARTED' and there were some 'STARTED' servers within the group before start-servers was called.</li>
											<li>The procedure will be completed with error if timeout is reached and not all servers are 'STARTED'.</li>
										</ol>
									</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/StartServers/ECJBossStartServersForm1.PNG" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results in the Job Details page. In the <b>StartServers</b> step, click the Log icon to see the diagnostic information. For example</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartServers/ECJBossStartServersStatus1.PNG" />
                <br />
				<img src="../../plugins/@PLUGIN_NAME@/images/StartServers/ECJBossStartServersStatus2.PNG" />
                <br />
            </div>
            <div id="StartStandaloneServer"> <a name="StartStandaloneServer" id="StartStandaloneServer"></a>
                <h2>StartStandaloneServer</h2>
                <p>The StartStandaloneServer procedure starts a server in <i>standalone</i> mode. In this mode, each instance is an independent process.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StartStandaloneSever procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Physical location of the standalone script</td>
                                    <td>Provide the absolute physical path of the standalone script, i.e: 'standalone.bat', '/usr/tools/bin/standalone.sh', 'c:/Program Files/JBoss/bin/standalone.bat'.</td>
                                </tr>
                                <tr>
                                    <td>Optional configuration name</td>
                                    <td>The name of the XML configuration file used when you start the server with a different configuration.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <br />
                    <img src="../../plugins/@PLUGIN_NAME@/images/StartStandalone/ECJBossStartStandalone2.png" />
                    <br />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the job was completed:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartStandalone/ECJBossStartStandalone3.png" />
                <br />
                <p>In the <b>StartStandaloneServer</b> step, click the Log icon to see the diagnostic information. The output is
                    similar to the following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StartStandalone/ECJBossStartStandalone4.png" />
                <br />
            </div>
            <div id="StopServers"> <a name='StopServers' id="StopServers"></a>
                <h2>StopServers</h2>
				The StopServers procedure stops the servers in the specified server group and checks if these servers are stopped successfully.
				<br/><br/>
				This procedure is build around jboss-cli command 'stop-servers' for the server groups, e.g. '/server-group=some-group-name:stop-servers'.
				Check of servers statuses is done also with help of cli - basically the procedure checks 'status' attributes of needed servers on needed hosts (within specified server group), e.g. '/host=some-host-name/server-config=some-server-name:read-attribute(name=status)'.
				Expected value for stopped servers is 'STOPPED' or 'DISABLED' (similar statuses which indicate that servers are stopped, the difference is that 'DISABLED' status indicates that a server is configured to not start automatically while 'STOPPED' status indicates that a server is configured to start automatically).
				<ol>
					<li>The procedure will be completed with success if all servers within server group are 'STOPPED' or 'DISABLED' and there were no 'STOPPED' or 'DISABLED' servers within the group before stop-servers was called.</li>
					<li>The procedure will be completed with warning if all servers within server group are 'STOPPED' or 'DISABLED' and there were some 'STOPPED' or 'DISABLED' servers within the group before stop-servers was called.</li>
					<li>The procedure will be completed with error if timeout for recurring check of servers is reached and not all servers are 'STOPPED' or 'DISABLED'.</li>
				</ol>
				List of all possible values of cli server statuses is the following (according to some WildFly open source code):
				<ol>
                    <li>STARTED - The server is started</li>
					<li>STOPPED - The server is stopped and configured to start automatically</li>
					<li>DISABLED - The server is stopped and configured not to start automatically</li>
					<li>STARTING - The server is starting</li>
					<li>STOPPING - The server is stopping</li>
					<li>FAILED - The server failed to start</li>
					<li>UNKNOWN - The status of the server is currently unknown. This is the status of any server whose host controller is currently unreachable</li>
					<li>DOES_NOT_EXIST - Status indicating the host controller does not recognize the server name</li>
				</ol>
                <h3>Input</h3>
                <ol>
                    <li>Go to the StopServers procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>
										A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.
										To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.
									</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>
										Provide the physical location of the jboss Command Line Interface (CLI) script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'.
										If omitted, script location from configuration will be used.
									</td>
                                </tr>
                                <tr>
                                    <td class='required'>Servers group</td>
                                    <td>
										Required parameter.
										<br/>
										The name of the server group to stop. The following cli command will be called: e.g. if 'some-group-name' is specified then '/server-group=some-group-name:stop-servers' is called.
									</td>
                                </tr>
                                <tr>
                                    <td>Timeout for recurring check of servers (seconds)</td>
                                    <td>
										After stop-servers command for the server group is called the procedure starts performing recurring check of servers if they are started ('status' attribute is 'STOPPED' or 'DISABLED', see procedure description).
										Delay between each check is 5 seconds (hard coded value). Check will be performed only one time if the timeout is not specified or it is less than 5 seconds. Default is 300 seconds.
										<ol>
											<li>The procedure will be completed with success if all servers within server group are 'STOPPED' or 'DISABLED' and there were no 'STOPPED' or 'DISABLED' servers within the group before stop-servers was called.</li>
											<li>The procedure will be completed with warning if all servers within server group are 'STOPPED' or 'DISABLED' and there were some 'STOPPED' or 'DISABLED' servers within the group before stop-servers was called.</li>
											<li>The procedure will be completed with error if timeout for recurring check of servers is reached and not all servers are 'STOPPED' or 'DISABLED'.</li>
										</ol>
									</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/StopServers/ECJBossStopServersForm1.PNG" />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results in the Job Details page. In the <b>StopServers</b> step, click the Log icon to see the diagnostic information. For example:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/StopServers/ECJBossStopServersStatus1.PNG" />
                <br />
				<img src="../../plugins/@PLUGIN_NAME@/images/StopServers/ECJBossStopServersStatus2.PNG" />
                <br />
            </div>
            <div id="UndeployApp"> <a name='UndeployApp' id="UndeployApp"></a>
                <h2>UndeployApp</h2>
                <p>The UndeployApp procedure undeploys the specified application and may remove application from the repository.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the UndeployApp procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Deployment Name</td>
                                    <td>Unique name of the application (deployment) to undeploy.</td>
                                </tr>
                                <tr>
                                    <td>Apply undeploy to all server groups</td>
                                    <td>Select this option to apply undeploy to all server groups in which the deployment is enabled. Either server-groups or all-relevant-server-groups is required in domain mode. This argument is not applicable in standalone mode.</td>
                                </tr>
                                <tr>
                                    <td>Server groups to apply</td>
                                    <td>Provide the comma-separated list of server group names the undeploy command applies to.</td>
                                </tr>
                                <tr>
                                    <td>Keep content</td>
                                    <td>Select this option to disable the deployment and keep the content of the deployment, or unselect it to disable the deployment and removes its content from the repository.</td>
                                </tr>
                                <tr>
                                    <td>Wait time</td>
                                    <td>Wait time for terminal status in seconds. If not provided, only one check will be performed. If 0, it will wait until criteria is met. Default 300.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/UndeployApp/ECJBossUndeployApp2.png" />
                </ol>
                <h3>Output</h3>
                <p>After the job runs, you can view the results, including the following job details, which show that the application was undeployed:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/UndeployApp/ECJBossUndeployApp3.png" />
                <br />
                <!--
                <p>In the <b>UndeployApp</b> step, click the Log icon to see the diagnostic information. The output is similar to the
                    following diagnostic report:</p>
                <br />
                <img src="../../plugins/@PLUGIN_NAME@/images/UndeployApp/ECJBossUndeployApp4.png" />
                <br />
                -->
            </div>
            <div id="CheckServerGroupStatus"> <a name='CheckServerGroupStatus' id="CheckServerGroupStatus"></a>
                <h2>CheckServerGroupStatus</h2>
                <p>The CheckServerGroupStatus procedure gets the statuses of all servers in the specified group and compares it with the provided criteria.</p>
                <h3>Input</h3>
                <ol>
                    <li>Go to the CheckServerGroupStatus procedure.</li>
                    <li>Enter the following parameters:<br />
                        <table class="grid">
                            <thead>
                                <tr>
                                    <th>Parameter</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class='required'>Configuration name</td>
                                    <td>A unique name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</td>
                                </tr>
                                <tr>
                                    <td>Physical location of the jboss client script</td>
                                    <td>Provide the physical location of the jboss Command Line Interface script, i.e: 'jboss-cli.bat', '/path/to/jboss-cli.sh'. If omitted, script location from configuration will be used.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Server group name</td>
                                    <td>The name of server group to be checked.</td>
                                </tr>
                                <tr>
                                    <td>Wait time</td>
                                    <td>Wait time for terminal status in seconds. If not provided, only one check will be performed. If 0, it will wait until criteria is met. Default 300.</td>
                                </tr>
                                <tr>
                                    <td class='required'>Criteria</td>
                                    <td>A desired status for all servers in the group.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <img src="../../plugins/@PLUGIN_NAME@/images/CheckServerGroupStatus/CheckServerGroupStatus.png" />
                </ol>

            </div>
            <h1 id="known-issues">Known Issues</h1>
            <h2>Windows only. jboss-cli.bat from JBoss EAP 6 exits with wrong code.</h2>
            jboss-cli.bat does not exit with correct return code when calling it from a wrapper script. It always exits with 0, even if the operation failed.<br />
            For ElectricFlow it means that jboss-cli response may be interpreted wrong.<br />
            Details: <a href="https://bugzilla.redhat.com/show_bug.cgi?id=1223877" target="_BLANK">https://bugzilla.redhat.com/show_bug.cgi?id=1223877</a> <br />
            Solution:
            <p>
                Make sure that JBoss 6 with all updates is being used. For JBoss EAP 6.4 latest Cummulative Pack should be installed.
            </p>
            <br />

            <h2>All systems. jboss-cli in non-interactive (--command) mode still prompts user for input if certificate is not valid (self-signed, invalid, etc).</h2>
            Affects Secured JBoss connection only. If target certificate is not valid, self-signed, exported, etc, jboss-cli will ask for connection confirmation, even in non-interactive mode.
            <br />
            Details:<br />
            <a href="https://issues.jboss.org/browse/WFLY-2950">https://issues.jboss.org/browse/WFLY-2950</a>
            <a href="https://issues.jboss.org/browse/WFCORE-869">https://issues.jboss.org/browse/WFCORE-869</a>
            <br />
            This issue has not been fixed in the JBoss EAP 7. But --error-on-interact option as workaround has been added.
            <br />
            As result, plugin procedure may hang unexpectedly, if secured connection is being used and certificate is invalid.

            Solutions:
            <ul>
                <li>Use valid certificate.</li>
                <li>Use --error-on-interact as additional parameter. Procedure will not hang, but will be failed, if certificate is invalid.</li>
                <li>
                    In the plugin configuration, using "Additional Java options" field, provide keystore file with certificate accepted. It could be achieved with the following value:
                    <pre>-Djavax.net.ssl.trustStore=/path/to/your.keystore</pre>
                </li>
            </ul>
            <h2>All systems, JBoss 6.2, JBoss 6.0. CLI fails to show app status when runtime-name is different from the deployment name.</h2>
            jboss-cli may fail with "no metrics available" result during CheckDeployStatus procedure.
            <p>
                For details see: <a href="https://access.redhat.com/solutions/481643" target="_BLANK">https://access.redhat.com/solutions/481643</a>.<br />
                Bugzilla reference: <a href="https://bugzilla.redhat.com/show_bug.cgi?id=1007696" target="_BLANK">https://bugzilla.redhat.com/show_bug.cgi?id=1007696</a>. <br />
                WildFly reference: <a href="https://issues.jboss.org/browse/WFLY-2061" target="_BLANK">https://issues.jboss.org/browse/WFLY-2061</a>. <br />
            </p>
            Solution:
            <p>
                Latest version of JBoss 6.2 is required. This issue has been fixed in 6.2.1.
            </p>
            <h1 id="rns">Release Notes</h1>
            <h2>@PLUGIN_KEY@ 2.1.5</h2>
            <ul>
                <li>Form for DeleteDatasource has been changed. Property "application_name" has been renamed to "datasource_name".</li>
                <li>CheckHostControllerStatus procedure has been added.</li>
                <li>CheckServerGroupStatus procedure has been added.</li>
                <li>Fixed an issue when CheckDeploymentStatus was unable to check status of deployment in the domain mode.</li>
                <li>
                    Following fields have been added to CheckDeployStatus procedure
                    <ul>
                        <li>Hosts</li>
                        <li>ServerGroups</li>
                        <li>Servers</li>
                        <li>Criteria</li>
                        <li>Wait time</li>
                    </ul>
                </li>
                <li>"Additional Java options" and "Physical location of the jboss client script" fields have been added to configuration.</li>
                <li>"Physical location of the jboss client script" field has been updated and now it is optional.</li>
                <li>EnableDeploy procedure has been improved to work with both domain and standalone modes.</li>
                <li>DisableDeploy procedure has been improved to work with both domain and standalone modes.</li>
                <li>Fixed a bug when CreateDatasource was failed during enabling datasource on JBoss 6.0.0.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.4</h2>
            <ul>
                <li>Fixed issue with configurations being cached for IE.</li>
            </ul>

            <h2>@PLUGIN_KEY@ 2.1.3</h2>
            <ul>
                <li>Updated the ShutdownStandaloneServer, StartDomainServer, and StartStandaloneServer procedures.</li>
                <li>Added link to plugin Configuration Page in plugin step panels.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.2</h2>
            <ul>
                <li>Improved the plugin for better windows support. </li>
                <li>Replaced the Username and Password fields with credentials in the CreateDatasource procedure for backward incompatibility.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.1</h2>
            <ul>
                <li>Cleaned up the code.</li>
                <li>Fixed the procedure descriptions and updated the documentation.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.1.0 (February 24, 2015)</h2>
            <ul>
                <li>Added the RunCustomCommand procedure to run user-specified commands on JBoss instances.</li>
                <li>Added the StartServers procedure to start server groups.</li>
                <li>Added the StopServers procedure to stop server groups.</li>
                <li>Fixed the CreateDatasource procedure.</li>
                <li>Fixed the DeleteDatasource procedure.</li>
                <li>Fixed the DeployApp procedure.</li>
                <li>Fixed the UndeployApp procedure</li>
                <li>Fixed the EnableDeploy procedure.</li>
                <li>Fixed the DisableDeploy procedure.</li>
                <li>Fixed plugin errors on Linux ElectricFlow instances.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.7 (December 2014)</h2>
            <ul>
                <li>Fixed a POST_PROCESSOR_ERROR in the CheckServerStatus procedure.</li>
                <li>Fixed an error in the CheckDeployStatus procedure where the <i>Success Criteria</i> was set to "Page not found."</li>
                <li>Fixed a bug in the DeployApp procedure where the "Runtime name for deployment" was specified.</li>
            </ul>

            <h2>@PLUGIN_KEY@ 2.0.6 (June 2012)</h2>
            <ul>
                <li>Added five new procedures to check the status of deployments, create datasources, delete datasources,
                    stop servers, and restart servers.</li>
                <li>Fixed minor bugs.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.5 (April 2012)</h2>
            <ul>
                <li>Changed the procedure names in the step picker section.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.4 (March 2012)</h2>
            <ul>
                <li>Did minor fixes.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.3</h2>
            <ul>
                <li>Made improvements to the Help document.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.2</h2>
            <ul>
                <li>Upgraded the plugin to use the new XML parameter form.</li>
                <li>Added a direct link to the new Help document.</li>
            </ul>
            <h2>@PLUGIN_KEY@ 2.0.1</h2>
            <ul>
                <li>Improved the XML parameter panels.</li>
                <li>Reformatted the Help document.</li>
            </ul>
        </div>
    </body>
</html>

